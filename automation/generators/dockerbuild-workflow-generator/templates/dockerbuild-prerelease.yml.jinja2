################################################################################
# AUTOGENERATED FILE, DO NOT EDIT                                              #
# ---------------------------------------------------------------------------- #
# this file was created from                                                   #
# automation/generators/dockerbuild-workflow-generator/dockerbuild-config.yaml #
################################################################################

name: Build {{ displayName }} Prerelease Dockerimage
run-name: Build {{ displayName }} Prerelease Dockerimage
on:
  workflow_dispatch:
  push:
    branches:
    - feature/*
    - odaa-*
    paths: 
      {{ paths | to_yaml |indent(6) }}
jobs:
  build-{{ fileName }}-prerelease-dockerfile-job:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: read image of {{ fileName }} from values.yaml
        id: get_values_image
        uses: mikefarah/yq@master
        with:
          cmd: yq '{{ valuesPathImage }}' {{ valuesYamlFile }}
          
      - name: read versionnumber of {{ fileName }} from values.yaml
        id: get_values_version
        uses: mikefarah/yq@master
        with:
          cmd: yq '[{{ valuesPathVersion }}, {{ valuesPathPrereleaseSuffix }}] | filter(.!=null and .!="") | join("-")' {{ valuesYamlFile }}
          
      - name: Check Version
        id: check-tag
        run: |
          echo 
          if [[ ${% raw %}{{ steps.get_values_version.outputs.result }}{% endraw %} =~ ^[0-9]+\.[0-9]+\.[0-9]+-.*$ ]]; then
              echo "Version ${% raw %}{{ steps.get_values_version.outputs.result }}{% endraw %} matches featurebranch format <n>.<n>.<n>-<prerelease>"
          else
              echo "::error::Version ${% raw %}{{ steps.get_values_version.outputs.result }}{% endraw %} does not match prerelease format <n>.<n>.<n>-<prerelease>" && exit 1
          fi        
              
      - name: Get Git commit timestamps
        run: |
            echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
            echo "GIT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "CICD_BUILD_TIME=$(date -Iseconds)" >> $GITHUB_ENV
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${% raw %}{{ secrets.DOCKERHUB_USERNAME }}{% endraw %}
          password: ${% raw %}{{ secrets.DOCKERHUB_TOKEN }}{% endraw %}
                
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: {{ buildContext }}
          {%- if buildDockerfile %}
          file: {{ buildDockerfile }}
          {%- endif %}
          build-args: |
            SOURCE_DATE_EPOCH=${% raw %}{{ env.SOURCE_DATE_EPOCH }}{% endraw %}
            GIT_COMMIT_SHA=${% raw %}{{ env.GIT_COMMIT_SHA }}{% endraw %}
            CICD_BUILD_TIME=${% raw %}{{ env.CICD_BUILD_TIME }}{% endraw %}
          platforms: {% if platforms %}{{ platforms }}{% else %}linux/amd64,linux/arm64{% endif %}
          push: true
          tags: |
            ${% raw %}{{ steps.get_values_image.outputs.result }}{% endraw %}:latest
            ${% raw %}{{ steps.get_values_image.outputs.result }}{% endraw %}:${% raw %}{{ steps.get_values_version.outputs.result }}{% endraw %}
        env:
          SOURCE_DATE_EPOCH: ${% raw %}{{ env.SOURCE_DATE_EPOCH }}{% endraw %}


@startuml

participant Canvas as "Canvas"
entity Component
participant "Component Operator" as ComponentOperator
participant "Kubernetes API" as KubernetesAPI
participant "Component Implementation" as ComponentImplementation
participant CanvasVault as "Canvas Vault"


group Canvas Vault Setup 
    ...
	Canvas -> CanvasVault : setup jwt endpoint for oidc_discovery with secrets/kubernetes.io/serviceaccount/ca.crt
	...
end group

group Bootstrap - component deployment
	Component -> ComponentOperator : on.create
	ComponentOperator -> ComponentOperator : create unique Component-ID <CID>
	ComponentOperator -> KubernetesAPI : create ServiceAccount <SA-CID> for Component
	ComponentOperator -> CanvasVault : create Key-Value store /kv-<CID>
	ComponentOperator -> CanvasVault : Setup JWT role for <SA-CID> with full access to path /kv-<CID>
	...
	ComponentOperator -> ComponentImplementation : inject ServiceAccountToken & <CID>
	note right
	  add volume .../secrets/kubernetes.io/serviceaccount/token
	    ...
	      sources:
	      - serviceAccountToken:
	          expirationSeconds: 3607
	          path: token
	    ...
	  The token is a JWT signed by the cluster ca
    end note
end group

group Runtime - component running
	ComponentImplementation -> CanvasVault : login using JWT of <SA-CID>
	ComponentImplementation -> CanvasVault : create secret(key, value) in /kv-<CID>
	...
	ComponentImplementation -> CanvasVault : read secret(key) from /kv-<CID>
	ComponentImplementation  <-- CanvasVault : return secret-value
end group

@enduml

{{/*
Role Management API Deployment
This template conditionally deploys either:
- Permission Specification Set API (TMF672) when permissionspec.enabled=true (default)
- Party Role API (TMF669) when permissionspec.enabled=false
*/}}
{{- if .Values.permissionspec.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-permissionspecapi
  labels:
    oda.tmforum.org/componentName: {{.Release.Name}}-{{.Values.component.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: {{.Release.Name}}-permissionspecapi
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-{{.Values.component.name}}
        impl: {{.Release.Name}}-permissionspecapi
        version: {{.Values.permissionspec.versionLabel}}
    spec:
      containers:
      - name: {{.Release.Name}}-permissionspecapi
        image: {{.Values.permissionspec.image}}
        env:
        - name: RELEASE_NAME
          value: {{.Release.Name}}
        - name: COMPONENT_NAME
          value: {{.Release.Name}}-{{.Values.component.name}}
        - name: MONGODB_HOST
          value: {{.Release.Name}}-mongodb
        - name: MONGODB_PORT
          value: "{{.Values.mongodb.port}}"
        - name: MONGODB_DATABASE
          value: {{.Values.mongodb.database}}
        - name: NODE_ENV
          value: production
        imagePullPolicy: Always
        ports:
        - name: {{.Release.Name}}-psapi
          containerPort: 8080
        startupProbe:
          httpGet:
            path: /{{.Release.Name}}-{{.Values.component.name}}/rolesAndPermissionsManagement/v5/permissionSpecificationSet
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
{{- else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-partyroleapi
  labels:
    oda.tmforum.org/componentName: {{.Release.Name}}-{{.Values.component.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: {{.Release.Name}}-partyroleapi
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-{{.Values.component.name}}
        impl: {{.Release.Name}}-partyroleapi
        version: {{.Values.partyrole.versionLabel}}
    spec:
      containers:
      - name: {{.Release.Name}}-partyroleapi
        image: {{.Values.partyrole.image}}
        env:
        - name: RELEASE_NAME
          value: {{.Release.Name}}
        - name: COMPONENT_NAME
          value: {{.Release.Name}}-{{.Values.component.name}}
        - name: MONGODB_HOST
          value: {{.Release.Name}}-mongodb
        - name: MONGODB_PORT
          value: "{{.Values.mongodb.port}}"
        - name: MONGODB_DATABASE
          value: {{.Values.mongodb.database}}
        - name: NODE_ENV
          value: production
        imagePullPolicy: Always
        ports:
        - name: {{.Release.Name}}-prapi
          containerPort: 8080
        startupProbe:
          httpGet:
            path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4/partyRole
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
{{- end }}

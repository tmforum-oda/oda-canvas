################################################################################
# AUTOGENERATED FILE, DO NOT EDIT                                              #
# ---------------------------------------------------------------------------- #
# this file was created from                                                   #
# automation/generators/dockerbuild-workflow-generator/dockerbuild-config.yaml #
################################################################################

name: Build DependentAPI-Simple-Operator Prerelease Dockerimage
run-name: Build DependentAPI-Simple-Operator Prerelease Dockerimage
on:
  workflow_dispatch:
  push:
    branches:
    - feature/*
    - odaa-*
    paths: 
      - source/operators/dependentApiSimpleOperator/docker/**/*

jobs:
  build-dependentapi-simple-operator-prerelease-dockerfile-job:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: read image of dependentapi-simple-operator from values.yaml
        id: get_values_image
        uses: mikefarah/yq@master
        with:
          cmd: yq '.dependentapi-simple-operator.image' charts/canvas-oda/values.yaml
          
      - name: read versionnumber of dependentapi-simple-operator from values.yaml
        id: get_values_version
        uses: mikefarah/yq@master
        with:
          cmd: yq '[.dependentapi-simple-operator.version, .dependentapi-simple-operator.prereleaseSuffix] | filter(.!=null and .!="") | join("-")' charts/canvas-oda/values.yaml
          
      - name: Check Version
        id: check-tag
        run: |
          echo 
          if [[ ${{ steps.get_values_version.outputs.result }} =~ ^[0-9]+\.[0-9]+\.[0-9]+-.*$ ]]; then
              echo "Version ${{ steps.get_values_version.outputs.result }} matches featurebranch format <n>.<n>.<n>-<prerelease>"
          else
              echo "::error::Version ${{ steps.get_values_version.outputs.result }} does not match prerelease format <n>.<n>.<n>-<prerelease>" && exit 1
          fi        

      - name: read release versionnumber of dependentapi-simple-operator from values.yaml
        id: get_values_release_version
        uses: mikefarah/yq@master
        with:
          cmd: yq '.dependentapi-simple-operator.version' charts/canvas-oda/values.yaml
              
      - name: Get Git commit timestamps
        run: |
            echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
            echo "GIT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "CICD_BUILD_TIME=$(date -Iseconds)" >> $GITHUB_ENV
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check that release image (after removing prereleasesuffix) does not yet exist 
        id: check_release_docker_image
        uses: KerberosMorphy/docker-exist-action@v1.1.1
        with:
          registry: docker.io
          image: ${{ steps.get_values_image.outputs.result }}:${{ steps.get_values_release_version.outputs.result }}
      - name: error if release tag (without prerelease suffix) already exists
        if: steps.check_release_docker_image.outputs.image_exist==1
        run: |
          echo  "::error::image tag ${{ steps.get_values_release_version.outputs.result }} already exists in repo ${{ steps.get_values_image.outputs.result }}, exiting!" && exit 2
      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: source/operators/dependentApiSimpleOperator/docker
          build-args: |
            SOURCE_DATE_EPOCH=${{ env.SOURCE_DATE_EPOCH }}
            GIT_COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
            CICD_BUILD_TIME=${{ env.CICD_BUILD_TIME }}
          load: true
          push: true
          tags: |
            ${{ steps.get_values_image.outputs.result }}:latest
        env:
          SOURCE_DATE_EPOCH: ${{ env.SOURCE_DATE_EPOCH }}
      
      # test
      # problem using local image: https://github.com/docker/build-push-action/issues/1015
      - name: Run Unit Tests
        uses: docker/build-push-action@v6
        with:
          context: source/operators/dependentApiSimpleOperator/docker
          file: source/operators/dependentApiSimpleOperator/docker/DockerfileTest
          build-args: |
            FROM_IMAGE=${{ steps.get_values_image.outputs.result }}:latest
          load: true
          push: false
          tags: local-test-img
      
      - name: Get Test Results
        run: |
          docker run --rm local-test-img > junit-report.xml
          cat junit-report.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        #if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'junit-report.xml'
          fail_on_failure: true
          include_passed: true
          detailed_summary: true
                
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: source/operators/dependentApiSimpleOperator/docker
          build-args: |
            SOURCE_DATE_EPOCH=${{ env.SOURCE_DATE_EPOCH }}
            GIT_COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
            CICD_BUILD_TIME=${{ env.CICD_BUILD_TIME }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.get_values_image.outputs.result }}:latest
            ${{ steps.get_values_image.outputs.result }}:${{ steps.get_values_version.outputs.result }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.SOURCE_DATE_EPOCH }}

################################################################################
# AUTOGENERATED FILE, DO NOT EDIT                                              #
# ---------------------------------------------------------------------------- #
# this file was created from                                                   #
# automation/generators/dockerbuild-workflow-generator/dockerbuild-config.yaml #
################################################################################

name: Build Component-Istio-Controller Release Dockerimage
run-name: Build Component-Istio-Controller Release Dockerimage
on:
  workflow_dispatch:
  push:
    branches:
    - master
    paths: 
      - source/operators/component-IstioController-dockerfile
      - source/operators/componentOperator/**/*
      - source/operators/apiOperatorIstio/**/*
      - source/operators/securityController/**/*

jobs:
  build-component-istio-controller-release-dockerfile-job:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: read image of component-istio-controller from values.yaml
        id: get_values_image
        uses: mikefarah/yq@master
        with:
          cmd: yq '.controller.deployment.compconImage' charts/canvas-oda/values.yaml
          
      - name: read versionnumber of component-istio-controller from values.yaml
        id: get_values_version
        uses: mikefarah/yq@master
        with:
          cmd: yq '[.controller.deployment.compconVersion, .controller.deployment.compconPrereleaseSuffix] | filter(.!=null and .!="") | join("-")' charts/canvas-oda/values.yaml
          
      - name: Check Version
        id: check-tag
        run: |
          echo 
          if [[ ${{ steps.get_values_version.outputs.result }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Version ${{ steps.get_values_version.outputs.result }} matches release format <n>.<n>.<n>"
          else
              echo "::error::Version ${{ steps.get_values_version.outputs.result }} does not match release format <n>.<n>.<n>" && exit 1
          fi        
              
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
                
      - name: Check for already existing image tag 
        id: check_docker_image
        uses: KerberosMorphy/docker-exist-action@v1.1.1
        with:
          registry: docker.io
          image: ${{ steps.get_values_image.outputs.result }}:${{ steps.get_values_version.outputs.result }}
      - name: error if tag already exists
        if: steps.check_docker_image.outputs.image_exist==1
        run: |
          echo  "::error::image tag ${{ steps.get_values_version.outputs.result }} already exists in repo ${{ steps.get_values_image.outputs.result }}, exiting!" && exit 2 
      
      - name: Get Git commit timestamps
        run: |
            echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
            echo "GIT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "CICD_BUILD_TIME=$(date -Iseconds)" >> $GITHUB_ENV
                
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: source/operators
          file: source/operators/component-IstioController-dockerfile
          build-args: |
            SOURCE_DATE_EPOCH=${{ env.SOURCE_DATE_EPOCH }}
            GIT_COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
            CICD_BUILD_TIME=${{ env.CICD_BUILD_TIME }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.get_values_image.outputs.result }}:latest
            ${{ steps.get_values_image.outputs.result }}:${{ steps.get_values_version.outputs.result }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.SOURCE_DATE_EPOCH }}

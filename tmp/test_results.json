
> oda-canvas-bdd-tests@0.0.1 start
> cucumber-js  --publish


==================================================================
Scenario started at: 2024-08-13T16:42:22.494Z
..helm upgrade pc ./testData/productcatalog-v1beta3 -n components { encoding: 'utf-8' }
F-
Scenario status: FAILED
------------------------------------------------------------------
Controller logs:
[2024-08-13 16:37:39,099] ComponentOperator    [INFO    ] Logging set to 20
[2024-08-13 16:37:39,100] ComponentOperator    [INFO    ] CICD_BUILD_TIME=2024-04-30T09:48:37Z
[2024-08-13 16:37:39,100] ComponentOperator    [INFO    ] GIT_COMMIT_SHA=85a8e37e
[2024-08-13 16:37:39,100] ComponentOperator    [INFO    ] Monitoring namespace components
[2024-08-13 16:37:39,105] APIOperator          [INFO    ] Logging set to 20
[2024-08-13 16:37:39,105] APIOperator          [INFO    ] OpenMetrics implementation pattern set to DataDogAnnotation
[2024-08-13 16:40:36,548] kopf.objects         [ERROR   ] [components/pc-mongodb-pv-claim] Handler 'adopt_persistentvolumeclaim' failed temporarily: Conflict updating persistentvolumeclaim.
[2024-08-13 16:40:36,598] ComponentOperator    [INFO    ] [pc-productcatalogmanagement|service/pc-productcatalogmanagement-sm|adopt_service|adopt_service] Adding component as parent of service: pc-productcatalogmanagement
[2024-08-13 16:40:36,619] ComponentOperator    [INFO    ] [pc-productcatalogmanagement|service/pc-partyroleapi|adopt_service|adopt_service] Adding component as parent of service: pc-productcatalogmanagement
[2024-08-13 16:40:36,637] ComponentOperator    [INFO    ] [pc-productcatalogmanagement|service/pc-prodcatapi|adopt_service|adopt_service] Adding component as parent of service: pc-productcatalogmanagement
[2024-08-13 16:40:36,654] ComponentOperator    [INFO    ] [pc-productcatalogmanagement|service/pc-promgmtapi|adopt_service|adopt_service] Adding component as parent of service: pc-productcatalogmanagement
[2024-08-13 16:40:36,677] ComponentOperator    [INFO    ] [pc-productcatalogmanagement|service/pc-mongodb|adopt_service|adopt_service] Adding component as parent of service: pc-productcatalogmanagement
[2024-08-13 16:40:36,724] kopf.objects         [ERROR   ] [components/pc-metricsapi] Handler 'adopt_deployment' failed temporarily: Conflict updating deployment.
[2024-08-13 16:40:36,795] kopf.objects         [ERROR   ] [components/pc-mongodb] Handler 'adopt_deployment' failed temporarily: Conflict updating deployment.
[2024-08-13 16:40:36,819] kopf.objects         [ERROR   ] [components/pc-prodcatapi] Handler 'adopt_deployment' failed temporarily: Conflict updating deployment.
[2024-08-13 16:40:36,840] kopf.objects         [ERROR   ] [components/pc-partyroleapi] Handler 'adopt_deployment' failed temporarily: Conflict updating deployment.
[2024-08-13 16:40:36,885] kopf.objects         [ERROR   ] [components/pc-roleinitialization] Handler 'adopt_job' failed temporarily: Conflict updating job.
[2024-08-13 16:40:36,925] kopf.objects         [ERROR   ] [components/pc-promgmtapi] Handler 'adopt_deployment' failed temporarily: Conflict updating deployment.
[2024-08-13 16:40:36,957] kopf.objects         [ERROR   ] [components/pc-productcataloginitialization] Handler 'adopt_job' failed temporarily: Conflict updating job.
[2024-08-13 16:40:37,175] kopf.objects         [WARNING ] [components/pc-mongodb-pv-claim] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_persistentvolumeclaim': {'started': '2024-08-13T16:40:36.394106+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.548945+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating persistentvolumeclaim.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,319] kopf.objects         [WARNING ] [components/pc-productcataloginitialization] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_job': {'started': '2024-08-13T16:40:36.932915+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.958001+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating job.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,320] kopf.objects         [WARNING ] [components/pc-prodcatapi] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_deployment': {'started': '2024-08-13T16:40:36.796969+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.819286+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating deployment.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,321] kopf.objects         [WARNING ] [components/pc-promgmtapi] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_deployment': {'started': '2024-08-13T16:40:36.890765+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.925545+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating deployment.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,325] kopf.objects         [WARNING ] [components/pc-metricsapi] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_deployment': {'started': '2024-08-13T16:40:36.680610+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.776506+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating deployment.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,325] kopf.objects         [WARNING ] [components/pc-mongodb] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_deployment': {'started': '2024-08-13T16:40:36.779158+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.795408+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating deployment.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,326] kopf.objects         [WARNING ] [components/pc-partyroleapi] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_deployment': {'started': '2024-08-13T16:40:36.821094+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.840239+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating deployment.', 'subrefs': None}}}, None),)
[2024-08-13 16:40:37,333] kopf.objects         [WARNING ] [components/pc-roleinitialization] Patching failed with inconsistencies: (('remove', ('status', 'kopf'), {'progress': {'adopt_job': {'started': '2024-08-13T16:40:36.842484+00:00', 'stopped': None, 'delayed': '2024-08-13T16:41:36.886004+00:00', 'purpose': 'create', 'retries': 1, 'success': False, 'failure': False, 'message': 'Conflict updating job.', 'subrefs': None}}}, None),)
...
34) Scenario: Install component and view Observability metrics # features/UC012-F001-View-Functional-Observability.feature:29
    ✔ Before # features/step-definition/ComponentManagementSteps.js:164
    ? Given I install a package 'productcatalog' with a metrics API 'metrics' and release name 'ctk'
        Undefined. Implement with the following snippet:

          Given('I install a package {string} with a metrics API {string} and release name {string}', function (string, string2, string3) {
            // Write code here that turns the phrase above into concrete actions
            return 'pending';
          });

    ? And the component 'ctk-productcatalog' has a deployment status of 'Complete'
        Undefined. Implement with the following snippet:

          Given('the component {string} has a deployment status of {string}', function (string, string2) {
            // Write code here that turns the phrase above into concrete actions
            return 'pending';
          });

    ? When A user creates a 'catalog' in the 'productcatalog' component
        Undefined. Implement with the following snippet:

          When('A user creates a {string} in the {string} component', function (string, string2) {
            // Write code here that turns the phrase above into concrete actions
            return 'pending';
          });

    ? Then the Observability platform shows the 'createCatalog' metrics
        Undefined. Implement with the following snippet:

          Then('the Observability platform shows the {string} metrics', function (string) {
            // Write code here that turns the phrase above into concrete actions
            return 'pending';
          });

    ✔ After # features/step-definition/ComponentManagementSteps.js:177

Warnings:

1) Scenario: Create DependentAPI resources for each segment # features/UC002-F001-Install-Component.feature:27
   ✔ Before # features/step-definition/ComponentManagementSteps.js:164
   ✔ Given An example package 'productinventory-v1beta3' with a 'productinventorymanagement' component with '1' API in its 'coreFunction' segment # features/step-definition/ComponentManagementSteps.js:38
   ✔ When I install the 'productinventory-v1beta3' package as release 'pi' # features/step-definition/ComponentManagementSteps.js:72
   ? Then I should see the '<ResourceName>' DependentAPI resource on the 'productinventorymanagement' component # features/step-definition/APIManagementSteps.js:93
       Pending
   ✔ After # features/step-definition/ComponentManagementSteps.js:177

39 scenarios (18 failed, 16 undefined, 1 pending, 4 passed)
139 steps (18 failed, 59 undefined, 1 pending, 33 skipped, 28 passed)
0m38.662s (executing steps: 0m38.563s)

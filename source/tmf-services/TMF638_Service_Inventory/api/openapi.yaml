openapi: 3.0.1
info:
  description: >-
    The intent of this API is to provide a consistent/standardized mechanism to
    query and manipulate the Service inventory.

    The Service Inventory API can be used to query the service instances for a
    customer via Self Service Portal or the Call Centre operator can query the
    service instances on behalf of the customer while a customer may have a
    complaint or a query.

    Note: Only the CustomerFacingServices instances will be presented to the
    customer.

    The Service Inventory API can be called by the Service Order Management to
    create a new service instance/ update an existing service instance in the
    Service Inventory.

    ### Service resource

    Service is an abstract base class for defining the Service hierarchy. All
    Services are characterized as either being possibly visible and usable by a
    Customer or not. This gives rise to the two subclasses of  Service:
    CustomerFacingService and ResourceFacingService.

    ### Service Inventory API performs the following operations on service  :

    - Retrieve  a service or a collection of services depending on filter
    criteria

    - Partial update of a service (including updating rules)

    - Create a service (including default values and creation rules and for
    administration users only)

    - Delete a service (for administration users only)

    - Notification of events on service
  title: Service Inventory Management
  version: 5.0.0
servers:
  - url: 'http://localhost:8638/tmf-api/serviceInventoryManagement/v5'
tags:
  - description: Operations for Service Resource
    name: service
  - description: Notifications for Resource Lifecycle and event notifications
    name: notification listener
  - description: Endpoints to register and terminate an Event Listener
    name: events subscription
paths:
  /service:
    get:
      description: List or find Service objects
      operationId: listService
      parameters:
        - description: Comma-separated properties to be provided in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
          allowReserved: true
        - description: Requested index for start of resources to be provided in response
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: Requested number of resources to be provided in response
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
          style: form
        - in: query
          name: _dynamic_params
          schema:
            type: object
            additionalProperties:
              type: string
          style: form
          explode: true
        - in: query
          name: filter
          schema:
            type: string
        - description: >-
            Comma-separated properties for sorting (prefix with '-' for
            descending
          in: query
          name: sort
          schema:
            type: string
          allowReserved: true
      responses:
        '200':
          content:
            application/json:
              examples:
                Service_List_example:
                  $ref: '#/components/examples/Service_List_example_response'
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
          description: Success
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
            X-Result-Count:
              $ref: '#/components/headers/X-Result-Count'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        '501':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: List or find Service objects
      tags:
        - service
      x-eov-operation-handler: controllers/ServiceController
    post:
      description: This operation creates a Service entity.
      operationId: createService
      parameters:
        - description: Comma-separated properties to be provided in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
          allowReserved: true
      requestBody:
        $ref: '#/components/requestBodies/Service_FVO'
      responses:
        '201':
          content:
            application/json:
              examples:
                Create_Service:
                  $ref: '#/components/examples/Create_Service_response'
                Create_Service_with_intent:
                  $ref: '#/components/examples/Create_Service_with_intent_response'
              schema:
                $ref: '#/components/schemas/Service'
          description: OK/Created
        '202':
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        '501':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Creates a Service
      tags:
        - service
      x-eov-operation-handler: controllers/ServiceController
  '/service/{id}':
    delete:
      description: This operation deletes a Service entity.
      operationId: deleteService
      parameters:
        - description: Identifier of the Resource
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '202':
          description: Accepted
        '204':
          description: Deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        '501':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Deletes a Service
      tags:
        - service
      x-eov-operation-handler: controllers/ServiceController
    get:
      description: >-
        This operation retrieves a Service entity. Attribute selection enabled
        for all first level attributes.
      operationId: retrieveService
      parameters:
        - description: Identifier of the Resource
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-separated properties to be provided in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
          allowReserved: true
        - in: query
          name: _dynamic_params
          schema:
            type: object
            additionalProperties:
              type: string
          style: form
          explode: true
        - in: query
          name: filter
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                Service_retrieve_example:
                  $ref: '#/components/examples/Service_retrieve_example_response'
              schema:
                $ref: '#/components/schemas/Service'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        '501':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Retrieves a Service by ID
      tags:
        - service
      x-eov-operation-handler: controllers/ServiceController
    patch:
      description: This operation updates partially a Service entity.
      operationId: patchService
      parameters:
        - description: Identifier of the Resource
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-separated properties to be provided in response
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
          allowReserved: true
      requestBody:
        $ref: '#/components/requestBodies/Service_MVO'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
            application/merge-patch+json:
              examples:
                Service_partialupdate_example_01:
                  $ref: >-
                    #/components/examples/Service_partialupdate_example_01_response
              schema:
                $ref: '#/components/schemas/Service'
            application/json-patch+json:
              examples:
                Service_partialupdate_example_11:
                  $ref: >-
                    #/components/examples/Service_partialupdate_example_11_response
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Service'
                  - items:
                      $ref: '#/components/schemas/Service'
                    type: array
                  - nullable: true
                    type: string
            application/json-patch-query+json:
              examples:
                Service_partialupdate_example_21:
                  $ref: >-
                    #/components/examples/Service_partialupdate_example_21_response
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Service'
                  - items:
                      $ref: '#/components/schemas/Service'
                    type: array
                  - nullable: true
                    type: string
          description: Success
        '202':
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
        '501':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Implemented
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Updates partially a Service
      tags:
        - service
      x-eov-operation-handler: controllers/ServiceController
  /listener/serviceCreateEvent:
    post:
      description: >-
        Example of a client listener for receiving the notification
        ServiceCreateEvent
      operationId: serviceCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity ServiceCreateEvent
      tags:
        - notification listener
      x-eov-operation-handler: controllers/NotificationListenerController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  /listener/serviceAttributeValueChangeEvent:
    post:
      description: >-
        Example of a client listener for receiving the notification
        ServiceAttributeValueChangeEvent
      operationId: serviceAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity ServiceAttributeValueChangeEvent
      tags:
        - notification listener
      x-eov-operation-handler: controllers/NotificationListenerController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  /listener/serviceStateChangeEvent:
    post:
      description: >-
        Example of a client listener for receiving the notification
        ServiceStateChangeEvent
      operationId: serviceStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity ServiceStateChangeEvent
      tags:
        - notification listener
      x-eov-operation-handler: controllers/NotificationListenerController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  /listener/serviceDeleteEvent:
    post:
      description: >-
        Example of a client listener for receiving the notification
        ServiceDeleteEvent
      operationId: serviceDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity ServiceDeleteEvent
      tags:
        - notification listener
      x-eov-operation-handler: controllers/NotificationListenerController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  /listener/serviceOperatingStatusChangeEvent:
    post:
      description: >-
        Example of a client listener for receiving the notification
        ServiceOperatingStatusChangeEvent
      operationId: serviceOperatingStatusChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/ServiceOperatingStatusChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Client listener for entity ServiceOperatingStatusChangeEvent
      tags:
        - notification listener
      x-eov-operation-handler: controllers/NotificationListenerController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  /hub:
    post:
      description: Sets the communication endpoint to receive Events.
      operationId: createHub
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
          description: Notified
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create a subscription (hub) to receive Events
      tags:
        - events subscription
      x-eov-operation-handler: controllers/EventsSubscriptionController
      parameters:
        - description: Comma-separated properties to be provided in response
          in: query
          name: fields
          schema:
            type: string
          allowReserved: true
  '/hub/{id}':
    delete:
      operationId: hubDelete
      parameters:
        - description: Identifier of the Resource
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: Deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Remove a subscription (hub) to receive Events
      tags:
        - events subscription
      x-eov-operation-handler: controllers/EventsSubscriptionController
components:
  examples:
    Service_List_example_response:
      description: Here's an example of a request for retrieving multiple services.
      value:
        - id: '5351'
          name: vCPE serial 1355615
          state: active
          '@type': Service
        - id: '5352'
          name: vDPI serial 1355445
          state: active
          '@type': Service
    Service_retrieve_example_response:
      description: Here's an example of a request for retrieving a specific service.
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: active
        category: CFS
        isServiceEnabled: true
        hasStarted: true
        startMode: '1'
        isStateful: true
        serviceDate: 2018-01-15T12:26:11.747Z
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        feature:
          - id: Feat1
            isEnabled: true
            name: ElasticBandwith
            featureCharacteritic:
              - id: 45gh-fg
                name: isCapped
                value: true
                valueType: boolean
                '@type': BooleanCharacteristic
            '@type': Feature
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'http://my.schemas/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            ServiceRelationshipCharacteristic:
              - id: '126'
                name: CrossRef
                value: 44-11-h
                valueType: string
                '@type': StringCharacteristic
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingService:
          - href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5885'
            id: '5885'
            '@type': ServiceRef
            '@referredType': Service
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        serviceOrderItem:
          - serviceOrderHref: 'https://mycsp.com:8080/tmf-api/serviceOrdering/v5/serviceOrder/42'
            serviceOrderId: '42'
            role: initiator
            '@referredType': ServiceOrderItem
            '@type': RelatedServiceOrderItem
            itemId: '1'
            itemAction: add
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        '@type': Service
    Create_Service_request:
      description: >-
        POST Service request example - only a subset of quote attributes are
        used in this example
      value:
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: active
        category: CFS
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        feature:
          - id: Feat1
            isEnabled: true
            name: ElasticBandwith
            featureCharacteritic:
              - id: 45gh-fg
                name: isCapped
                value: true
                valueType: boolean
                '@type': BooleanCharacteristic
            '@type': Feature
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'http://host:port/schema/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: This service was installed for a rock star.
            '@type': Note
        '@type': Service
    Create_Service_response:
      description: POST Service response description.
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: active
        category: CFS
        serviceDate: 2018-01-15T12:26:11.747Z
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        feature:
          - id: Feat1
            isEnabled: true
            name: ElasticBandwith
            featureCharacteristic:
              - id: 45gh-fg
                name: isCapped
                value: true
                valueType: boolean
                '@type': BooleanCharacteristic
            '@type': Feature
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'https://mycsp.com:8080/tmf-api/schema/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingResource:
          - id: '7171'
            href: >-
              https://mycsp.com:8080/tmf-api/resourceInventoryManagement/v5/resource/7171
            name: BNG_MUX
            value: 01 25 65
            '@type': ResourceRef
            '@referredType': VNF
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: This service was installed for a rock star.
            '@type': Note
        '@type': Service
    Create_Service_with_intent_request:
      description: >-
        POST Service request example - only a subset of quote attributes are
        used in this example
      value:
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: active
        category: CFS
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        serviceRelationship:
          - relationshipType: DependentOn
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        intent:
          '@type': Intent
          id: '42'
          description: Intent for ordering live broadcast service for an event
          validFor:
            startDateTime: 2022-10-23T00:30:00.000Z
            endDateTime: 2022-10-19T23:30:00.000Z
          isBundle: true
          version: 1.0.0
          intentSpecification:
            '@type': IntentSpecificationRef
            id: EventLiveBroadcast_IntentSpec
            name: EventLiveBroadcastIntentSpec
            '@referredType': IntentSpecification
            '@href': /intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec
          name: EventLiveBroadcast
          expression:
            '@type': JsonLdExpression
            expressionValue:
              '@context':
                icm: 'http://www.models.tmforum.org/tio/v1.0.0/IntentCommonModel#'
                cat: 'http://www.operator.com/Catalog#'
                idan: >-
                  http://www.idan-tmforum-catalyst.org/IntentDrivenAutonomousNetworks#
                xsd: 'http://www.w3.org/2001/XMLSchema#'
                t: 'http://www.w3.org/2006/time#'
                elb: 'http://www.operator.com/Catalog/EventWirelessAccess#'
                app: 'http://www.operator.com/Catalog/StreamingApplication#'
                geo: 'https://tmforum.org/2020/07/geographicPoint#'
              'idan:EventLiveBroadcast000001':
                '@type': 'icm:Intent'
                'icm:intentOwner': 'idan:Salesforce'
                'icm:hasExpectation':
                  'idan:Delivery_service':
                    '@type': 'icm:DeliveryExpectation'
                    'icm:target': '_:service'
                    'icm:params':
                      'icm:targetDescription': 'cat:EventWirelessAccess'
                  'idan:Delivery_app':
                    '@type': 'icm:DeliveryExpectation'
                    'icm:target': '_:application'
                    'icm:params':
                      'icm:targetDescription': 'cat:StreamingApplication'
                  'idan:Property_service':
                    '@type': 'icm:PropertyExpectation'
                    'icm:target': '_:service'
                    'icm:params':
                      'elb:serviceQuality':
                        - 'icm:value': 4KUHD
                      'elb:numberOfParticipants':
                        - 'icm:atMost': '200'
                      'elb:areaOfService':
                        - 'geo:geographicPoints':
                            - 'geo:longitude': 90
                              'geo:latitude': 44
                              'geo:altitude': 84
                            - 'geo:longitude': 84
                              'geo:latitude': -12
                              'geo:altitude': 24
                            - 'geo:longitude': 131
                              'geo:latitude': -36
                              'geo:altitude': 29
                            - 'geo:longitude': 7
                              'geo:latitude': 81
                              'geo:altitude': -42
                  'idan:Property_app':
                    '@type': 'icm:PropertyExpectation'
                    'icm:target': '_:application'
                    'icm:params':
                      'app:appType':
                        - 'icm:value': AWS MediaLive
                        - 'icm:value': Facebook Live
                        - 'icm:value': YouTube
                  'idan:Reporting':
                    '@type': 'icm:ReportingExpectation'
                    'icm:target': 'idan:EventLiveBroadcast'
                    'icm:params':
                      'icm:reportingInterval':
                        - 't:Duration':
                            - 't:numbericDuration': 10
                              't:temporalUnit': unitMinute
                      'icm:reportingEvent':
                        - 'icm:StateComplies'
                        - 'icm:StateDegrades'
          lifecycleStatus: Active
          creationDate: 2023-03-09T08:42:33.044Z
          lastUpdate: 2023-03-09T08:42:33.044Z
        '@type': Service
    Create_Service_with_intent_response:
      description: POST Service response description.
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: active
        category: CFS
        serviceDate: 2018-01-15T12:26:11.747Z
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        serviceRelationship:
          - relationshipType: DependentOn
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingResource:
          - id: '7171'
            href: >-
              https://mycsp.com:8080/tmf-api/resourceInventoryManagement/v5/resource/7171
            name: BNG_MUX
            value: 01 25 65
            '@type': ResourceRef
            '@referredType': VNF
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        intent:
          '@type': Intent
          id: '42'
          description: Intent for ordering live broadcast service for an event
          validFor:
            startDateTime: 2022-10-23T00:30:00.000Z
            endDateTime: 2022-10-19T23:30:00.000Z
          isBundle: true
          version: 1.0.0
          intentSpecification:
            '@type': IntentSpecificationRef
            id: EventLiveBroadcast_IntentSpec
            name: EventLiveBroadcastIntentSpec
            '@referredType': IntentSpecification
            '@href': /intent/v5/IntentSpecification/EventLiveBroadcast_IntentSpec
          name: EventLiveBroadcast
          expression:
            '@type': JsonLdExpression
            expressionValue:
              '@context':
                icm: 'http://www.models.tmforum.org/tio/v1.0.0/IntentCommonModel#'
                cat: 'http://www.operator.com/Catalog#'
                idan: >-
                  http://www.idan-tmforum-catalyst.org/IntentDrivenAutonomousNetworks#
                xsd: 'http://www.w3.org/2001/XMLSchema#'
                t: 'http://www.w3.org/2006/time#'
                elb: 'http://www.operator.com/Catalog/EventWirelessAccess#'
                app: 'http://www.operator.com/Catalog/StreamingApplication#'
                geo: 'https://tmforum.org/2020/07/geographicPoint#'
              'idan:EventLiveBroadcast000001':
                '@type': 'icm:Intent'
                'icm:intentOwner': 'idan:Salesforce'
                'icm:hasExpectation':
                  'idan:Delivery_service':
                    '@type': 'icm:DeliveryExpectation'
                    'icm:target': '_:service'
                    'icm:params':
                      'icm:targetDescription': 'cat:EventWirelessAccess'
                  'idan:Delivery_app':
                    '@type': 'icm:DeliveryExpectation'
                    'icm:target': '_:application'
                    'icm:params':
                      'icm:targetDescription': 'cat:StreamingApplication'
                  'idan:Property_service':
                    '@type': 'icm:PropertyExpectation'
                    'icm:target': '_:service'
                    'icm:params':
                      'elb:serviceQuality':
                        - 'icm:value': 4KUHD
                      'elb:numberOfParticipants':
                        - 'icm:atMost': '200'
                      'elb:areaOfService':
                        - 'geo:geographicPoints':
                            - 'geo:longitude': 90
                              'geo:latitude': 44
                              'geo:altitude': 84
                            - 'geo:longitude': 84
                              'geo:latitude': -12
                              'geo:altitude': 24
                            - 'geo:longitude': 131
                              'geo:latitude': -36
                              'geo:altitude': 29
                            - 'geo:longitude': 7
                              'geo:latitude': 81
                              'geo:altitude': -42
                  'idan:Property_app':
                    '@type': 'icm:PropertyExpectation'
                    'icm:target': '_:application'
                    'icm:params':
                      'app:appType':
                        - 'icm:value': AWS MediaLive
                        - 'icm:value': Facebook Live
                        - 'icm:value': YouTube
                  'idan:Reporting':
                    '@type': 'icm:ReportingExpectation'
                    'icm:target': 'idan:EventLiveBroadcast'
                    'icm:params':
                      'icm:reportingInterval':
                        - 't:Duration':
                            - 't:numbericDuration': 10
                              't:temporalUnit': unitMinute
                      'icm:reportingEvent':
                        - 'icm:StateComplies'
                        - 'icm:StateDegrades'
          lifecycleStatus: Active
          creationDate: 2023-03-09T08:42:33.044Z
          lastUpdate: 2023-03-09T08:42:33.044Z
        '@type': Service
    Service_partialupdate_example_01_request:
      description: >-
        Here's an example of a request for patching a service. In this example,
        service status is changed to inactive + supporting service changed.
      value:
        state: inactive
        supportingService:
          - href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/6500'
            id: '6500'
            '@type': ServiceRef
            '@referredType': Service
        '@type': Service
    Service_partialupdate_example_01_response:
      description: Response message
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: inactive
        category: CFS
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'http://host:port/schema/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            ServiceRelationshipCharacteristic:
              - id: '126'
                name: CrossRef
                value: 44-11-h
                valueType: string
                '@type': StringCharacteristic
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingService:
          - href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/6500'
            id: '6500'
            '@type': ServiceRef
            '@referredType': Service
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        serviceOrderItem:
          - serviceOrderHref: 'https://mycsp.com:8080/tmf-api/serviceOrdering/v5/serviceOrder/42'
            serviceOrderId: '42'
            role: initiator
            '@referredType': ServiceOrderItem
            '@type': RelatedServiceOrderItem
            itemId: '1'
            itemAction: add
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        '@type': Service
    Service_partialupdate_example_11_request:
      description: >-
        Here's an example of a request for updating a service using json-patch -
        In this example, service status is changed to inactive + supporting
        service changed.
      value:
        - op: replace
          path: state
          value: inactive
    Service_partialupdate_example_11_response:
      description: Response message
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: inactive
        category: CFS
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'http://host:port/schema/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            ServiceRelationshipCharacteristic:
              - id: '126'
                name: CrossRef
                value: 44-11-h
                valueType: string
                '@type': StringCharacteristic
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingService:
          - href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/6500'
            id: '6500'
            '@type': ServiceRef
            '@referredType': Service
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        serviceOrderItem:
          - serviceOrderHref: 'https://mycsp.com:8080/tmf-api/serviceOrdering/v5/serviceOrder/42'
            serviceOrderId: '42'
            role: initiator
            '@referredType': ServiceOrderItem
            '@type': RelatedServiceOrderItem
            itemId: '1'
            itemAction: add
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        '@type': Service
    Service_partialupdate_example_21_request:
      description: >-
        Here's an example of a request for updating a service using
        json-patch-query - In this example, service related party is changed.
      value:
        - op: replace
          path: /relatedParty/name?relatedParty.id=456
          value: John Pontus
    Service_partialupdate_example_21_response:
      description: Response message
      value:
        id: '5351'
        href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
        serviceType: Cloud
        name: vCPE serial 1355615
        description: Instantiation of vCPE
        state: inactive
        category: CFS
        startDate: 2018-01-15T12:26:11.747Z
        serviceSpecification:
          id: '1212'
          href: >-
            https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
          name: vCPE
          version: 1.0.0
          '@type': ServiceSpecificationRef
          '@referredType': ServiceSpecification
        serviceCharacteristic:
          - id: 452-gh6
            name: vCPE
            valueType: object
            value:
              '@type': VCPE
              '@schemaLocation': 'http://host:port/schema/VCPE.schema.json'
              vCPE_IP: 193.218.236.21
              MaxTxRate: 300
              TransmitPower: 11 dBm
              maxTream: 'OFF'
            '@type': ObjectCharacteristic
        serviceRelationship:
          - relationshipType: DependentOn
            ServiceRelationshipCharacteristic:
              - id: '126'
                name: CrossRef
                value: 44-11-h
                valueType: string
                '@type': StringCharacteristic
            service:
              href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645'
              id: '5645'
              '@type': ServiceRef
              '@referredType': Service
            '@type': ServiceRelationship
        supportingService:
          - href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/6500'
            id: '6500'
            '@type': ServiceRef
            '@referredType': Service
        relatedParty:
          - role: user
            partyOrPartyRole:
              href: 'https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456'
              id: '456'
              name: John Doe
              '@type': PartyRef
              '@referredType': Individual
            '@type': RelatedPartyRefOrPartyRoleRef
        serviceOrderItem:
          - serviceOrderHref: 'https://mycsp.com:8080/tmf-api/serviceOrdering/v5/serviceOrder/42'
            serviceOrderId: '42'
            role: initiator
            '@referredType': ServiceOrderItem
            '@type': RelatedServiceOrderItem
            itemId: '1'
            itemAction: add
        place:
          - role: InstallationAddress
            place:
              href: >-
                https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
              id: '2435'
              name: Customer primary location
              '@type': PlaceRef
              '@referredType': GeographicAddress
            '@type': RelatedPlaceRefOrValue
        note:
          - id: '77456'
            author: Harvey Poupon
            date: 2018-01-15T12:26:11.748Z
            text: >-
              This service was installed automatically, no issues were noted in
              testing.
            '@type': Note
        '@type': Service
    Create_request:
      description: Message example for ServiceCreateEvent event
      value:
        correlationId: b382501b-c423
        description: ServiceCreateEvent illustration
        domain: Commercial
        eventId: 4da6-b0f1-5a7fce3edc94
        eventTime: 2022-08-25T12:19:28.512Z
        eventType: ServiceCreateEvent
        priority: '4'
        timeOcurred: 2022-08-25T12:19:28.180Z
        title: ServiceCreateEvent
        event:
          service:
            id: '5351'
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
            serviceType: Cloud
            name: vCPE serial 1355615
            description: Instantiation of vCPE
            state: active
            category: CFS
            isServiceEnabled: true
            hasStarted: true
            startMode: '1'
            isStateful: true
            startDate: 2018-01-15T12:26:11.747Z
            serviceSpecification:
              id: '1212'
              href: >-
                https://mycsp.com:8080/tmf-api/serviceCatalogManagement/v5/serviceSpecification/1212
              name: vCPE
              version: 1.0.0
              '@type': ServiceSpecificationRef
              '@referredType': ServiceSpecification
            feature:
              - id: Feat1
                isEnabled: true
                name: ElasticBandwith
                featureCharacteritic:
                  - name: isCapped
                    value: true
                    id: 45gh-fg
                    valueType: boolean
                    '@type': BooleanCharacteristic
                '@type': Feature
            serviceCharacteristic:
              - id: 452-gh6
                name: vCPE
                valueType: object
                value:
                  '@type': VCPE
                  '@schemaLocation': 'http://my.schemas/vCPE.schema.json'
                  vCPE_IP: 193.218.236.21
                  MaxTxRate: 300
                  TransmitPower: 11 dBm
                  maxTream: 'OFF'
                '@type': ObjectCharacteristic
            serviceRelationship:
              - relationshipType: DependentOn
                ServiceRelationshipCharacteristic:
                  - id: '126'
                    name: CrossRef
                    value: 44-11-h
                    valueType: string
                    '@type': StringCharacteristic
                service:
                  href: >-
                    https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5645
                  id: '5645'
                  '@type': ServiceRef
                  '@referredType': Service
                '@type': ServiceRelationship
            supportingService:
              - href: >-
                  https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5885
                id: '5885'
                '@type': ServiceRef
                '@referredType': Service
            supportingResource:
              - id: '6161'
                href: >-
                  https://mycsp.com:8080/tmf-api/resourceInventoryManagement/v5/resource/5351
                name: GenInfra
                '@type': ResourceRef
                '@referredType': VirtualResource
              - id: '7171'
                href: >-
                  https://mycsp.com:8080/tmf-api/resourceInventoryManagement/v5/resource/7171
                name: BNG_MUX
                value: 01 25 65
                '@type': ResourceRef
                '@referredType': VNF
            relatedParty:
              - role: user
                partyOrPartyRole:
                  href: >-
                    https://mycsp.com:8080/tmf-api/partyManagement/v5/individual/456
                  id: '456'
                  name: John Doe
                  '@type': PartyRef
                  '@referredType': Individual
                '@type': RelatedPartyRefOrPartyRoleRef
            serviceOrderItem:
              - serviceOrderHref: 'https://mycsp.com:8080/tmf-api/serviceOrder/v5/serviceOrder/42'
                serviceOrderId: '42'
                role: initiator
                '@referredType': ServiceOrderItem
                '@type': RelatedServiceOrderItem
                itemId: '1'
                itemAction: add
              - serviceOrderHref: >-
                  https://mycsp.com:8080/tmf-api/serviceOrder/v5/serviceOrder/896
                serviceOrderId: '896'
                role: activation
                '@referredType': ServiceOrderItem
                '@type': RelatedServiceOrderItem
                itemId: '4'
                itemAction: modify
            place:
              - role: InstallationAddress
                place:
                  href: >-
                    https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
                  id: '2435'
                  name: Customer primary location
                  '@type': PlaceRef
                  '@referredType': GeographicAddress
                '@type': RelatedPlaceRefOrValue
            note:
              - id: '77456'
                author: Harvey Poupon
                date: 2018-01-15T12:26:11.748Z
                text: >-
                  This service was installed automatically, no issues were noted
                  in testing.
                '@type': Note
            '@type': Service
        reportingSystem:
          id: '427'
          name: APP-755
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '149'
          name: APP-78
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceCreateEvent
    AttributeValueChange_request:
      description: Message example for ServiceAttributeValueChangeEvent event
      value:
        correlationId: 7af07271-5f0c
        description: ServiceAttributeValueChangeEvent illustration
        domain: Commercial
        eventId: 4414-a94c-43a0a142a98c
        eventTime: 2022-08-25T12:19:28.526Z
        eventType: ServiceAttributeValueChangeEvent
        priority: '3'
        timeOcurred: 2022-08-25T12:19:19.786Z
        title: ServiceAttributeValueChangeEvent
        event:
          service:
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
            id: '5351'
            '@type': Service
            place:
              - role: InstallationAddress
                place:
                  href: >-
                    https://mycsp.com:8080/tmf-api/geographicAddressManagement/v5/geographicAddress/2435
                  id: '2435'
                  name: Customer primary location
                  '@type': PlaceRef
                  '@referredType': GeographicAddress
                '@type': RelatedPlaceRefOrValue
        reportingSystem:
          id: '427'
          name: APP-755
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '149'
          name: APP-78
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceAttributeValueChangeEvent
    StateChange_request:
      description: >-
        Message example for ServiceStateChangeEvent event with ?fields=state
        property only
      value:
        correlationId: 9b374459-e9b0
        description: ServiceStateChangeEvent illustration
        domain: Commercial
        eventId: 40c3-a3a0-2379e9894a7d
        eventTime: 2022-08-25T12:19:28.538Z
        eventType: ServiceStateChangeEvent
        priority: '3'
        timeOcurred: 2022-08-25T12:19:25.724Z
        title: ServiceStateChangeEvent
        event:
          service:
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
            id: '5351'
            '@type': Service
            state: active
        reportingSystem:
          id: '427'
          name: APP-755
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '149'
          name: APP-78
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceStateChangeEvent
    Delete_request:
      description: Message example for ServiceDeleteEvent event
      value:
        correlationId: 36af9e61-4a51
        description: ServiceDeleteEvent illustration
        domain: Commercial
        eventId: 4154-a76e-bf08c4bccb2e
        eventTime: 2022-08-25T12:19:28.549Z
        eventType: ServiceDeleteEvent
        priority: '1'
        timeOcurred: 2022-08-25T12:19:24.023Z
        title: ServiceDeleteEvent
        event:
          service:
            id: '5351'
            href: 'http://servername/service/5351'
            '@type': Service
        reportingSystem:
          id: '427'
          name: APP-755
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '149'
          name: APP-78
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceDeleteEvent
    OperatingStatusChange_request:
      description: Message example for ServiceOperatingStatusChangeEvent event
      value:
        correlationId: b382501b-c423
        description: ServiceOperatingStatusChangeEvent illustration
        domain: Commercial
        eventId: 4da6-b0f1-5a7fce3edc94
        eventTime: 2022-08-25T12:19:28.512Z
        eventType: ServiceOperatingStatusChangeEvent
        priority: '4'
        timeOcurred: 2022-08-25T12:19:28.180Z
        title: ServiceOperatingStatusChangeEvent
        event:
          service:
            id: '5351'
            href: 'https://mycsp.com:8080/tmf-api/serviceInventory/v5/service/5351'
            operatingStatus: running
            '@type': Service
        reportingSystem:
          id: '427'
          name: APP-755
          '@type': ReportingResource
          '@referredType': LogicalResource
        source:
          id: '149'
          name: APP-78
          '@type': ReportingResource
          '@referredType': LogicalResource
        '@baseType': Event
        '@type': ServiceOperatingStatusChangeEvent
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      explode: false
      schema:
        type: integer
      style: simple
    X-Result-Count:
      description: Actual number of items returned in the response body
      explode: false
      schema:
        type: integer
      style: simple
  parameters:
    Id:
      description: Identifier of the Resource
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    Fields:
      description: Comma-separated properties to be provided in response
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    Offset:
      description: Requested index for start of resources to be provided in response
      explode: true
      in: query
      name: offset
      required: false
      schema:
        type: integer
      style: form
    Limit:
      description: Requested number of resources to be provided in response
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
  requestBodies:
    Service_FVO:
      content:
        application/json:
          examples:
            Create_Service:
              $ref: '#/components/examples/Create_Service_request'
            Create_Service_with_intent:
              $ref: '#/components/examples/Create_Service_with_intent_request'
          schema:
            $ref: '#/components/schemas/Service_FVO'
      description: The Service to be created
      required: true
    Service_MVO:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Service_MVO'
        application/merge-patch+json:
          examples:
            Service_partialupdate_example_01:
              $ref: '#/components/examples/Service_partialupdate_example_01_request'
          schema:
            $ref: '#/components/schemas/Service_MVO'
        application/json-patch+json:
          examples:
            Service_partialupdate_example_11:
              $ref: '#/components/examples/Service_partialupdate_example_11_request'
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
        application/json-patch-query+json:
          examples:
            Service_partialupdate_example_21:
              $ref: '#/components/examples/Service_partialupdate_example_21_request'
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
      description: The Service to be patched
      required: true
    ServiceCreateEvent:
      content:
        application/json:
          examples:
            Create:
              $ref: '#/components/examples/Create_request'
          schema:
            $ref: '#/components/schemas/ServiceCreateEvent'
      description: Service create Event payload
      required: true
    ServiceAttributeValueChangeEvent:
      content:
        application/json:
          examples:
            AttributeValueChange:
              $ref: '#/components/examples/AttributeValueChange_request'
          schema:
            $ref: '#/components/schemas/ServiceAttributeValueChangeEvent'
      description: Service attributeValueChange Event payload
      required: true
    ServiceStateChangeEvent:
      content:
        application/json:
          examples:
            StateChange:
              $ref: '#/components/examples/StateChange_request'
          schema:
            $ref: '#/components/schemas/ServiceStateChangeEvent'
      description: Service stateChange Event payload
      required: true
    ServiceDeleteEvent:
      content:
        application/json:
          examples:
            Delete:
              $ref: '#/components/examples/Delete_request'
          schema:
            $ref: '#/components/schemas/ServiceDeleteEvent'
      description: Service delete Event payload
      required: true
    ServiceOperatingStatusChangeEvent:
      content:
        application/json:
          examples:
            OperatingStatusChange:
              $ref: '#/components/examples/OperatingStatusChange_request'
          schema:
            $ref: '#/components/schemas/ServiceOperatingStatusChangeEvent'
      description: Service operatingStatusChange Event payload
      required: true
    Hub_FVO:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      description: Data containing the callback endpoint to deliver the information
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    '401':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    '403':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    '404':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    '405':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Method Not allowed
    '409':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Conflict
    '500':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
    '501':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Implemented
    '503':
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Service Unavailable
    200ServiceArray:
      content:
        application/json:
          examples:
            Service_List_example:
              $ref: '#/components/examples/Service_List_example_response'
          schema:
            items:
              $ref: '#/components/schemas/Service'
            type: array
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
    200Service_Get:
      content:
        application/json:
          examples:
            Service_retrieve_example:
              $ref: '#/components/examples/Service_retrieve_example_response'
          schema:
            $ref: '#/components/schemas/Service'
      description: Success
    200Service_Patch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Service'
        application/merge-patch+json:
          examples:
            Service_partialupdate_example_01:
              $ref: '#/components/examples/Service_partialupdate_example_01_response'
          schema:
            $ref: '#/components/schemas/Service'
        application/json-patch+json:
          examples:
            Service_partialupdate_example_11:
              $ref: '#/components/examples/Service_partialupdate_example_11_response'
          schema:
            oneOf:
              - $ref: '#/components/schemas/Service'
              - items:
                  $ref: '#/components/schemas/Service'
                type: array
              - nullable: true
                type: string
        application/json-patch-query+json:
          examples:
            Service_partialupdate_example_21:
              $ref: '#/components/examples/Service_partialupdate_example_21_response'
          schema:
            oneOf:
              - $ref: '#/components/schemas/Service'
              - items:
                  $ref: '#/components/schemas/Service'
                type: array
              - nullable: true
                type: string
      description: Success
    201Service:
      content:
        application/json:
          examples:
            Create_Service:
              $ref: '#/components/examples/Create_Service_response'
            Create_Service_with_intent:
              $ref: '#/components/examples/Create_Service_with_intent_response'
          schema:
            $ref: '#/components/schemas/Service'
      description: OK/Created
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Error
    Hub:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
      description: Notified
  schemas:
    AccountRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
        propertyName: '@type'
      type: object
    AccountRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: >-
        Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
        propertyName: '@type'
      type: object
    AccountRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Account reference. A account may be a party account or a financial
        account.
      discriminator:
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
        propertyName: '@type'
      type: object
    Addressable:
      description: Base schema for adressable entities
      properties:
        href:
          description: Hyperlink reference
          type: string
        id:
          description: unique identifier
          type: string
      type: object
    Addressable_FVO:
      description: Base schema for adressable entities
      properties:
        id:
          description: unique identifier
          type: string
      type: object
    AgreementRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a
        service level agreement or a customer price agreement. An agreement
        involves a number of other business entities, such as products,
        services, and resources and/or their specifications.
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
        propertyName: '@type'
      type: object
    AgreementRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: >-
        Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a
        service level agreement or a customer price agreement. An agreement
        involves a number of other business entities, such as products,
        services, and resources and/or their specifications.
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
        propertyName: '@type'
      type: object
    AgreementRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a
        service level agreement or a customer price agreement. An agreement
        involves a number of other business entities, such as products,
        services, and resources and/or their specifications.
      discriminator:
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
        propertyName: '@type'
      type: object
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/Attachment_allOf'
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment'
        propertyName: '@type'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/AttachmentRef_allOf'
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
        propertyName: '@type'
    AttachmentRefOrValue:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Attachment entity and not the AttachmentRefOrValue class
        itself
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      type: object
    AttachmentRefOrValue_FVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Attachment entity and not the AttachmentRefOrValue class
        itself
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      type: object
    AttachmentRefOrValue_MVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Attachment entity and not the AttachmentRefOrValue class
        itself
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      type: object
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - $ref: '#/components/schemas/AttachmentRef_allOf'
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
        propertyName: '@type'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/AttachmentRef_allOf'
      discriminator:
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
        propertyName: '@type'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/Attachment_FVO_allOf'
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
        propertyName: '@type'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/Attachment_allOf'
      discriminator:
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
        propertyName: '@type'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/BaseEvent_allOf'
      discriminator:
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
        propertyName: '@type'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/BaseEvent_allOf'
      discriminator:
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
        propertyName: '@type'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/BaseEvent_allOf'
      discriminator:
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
        propertyName: '@type'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic_allOf'
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic_FVO_allOf'
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/BooleanArrayCharacteristic_FVO_allOf'
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/BooleanCharacteristic_allOf'
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/BooleanCharacteristic_FVO_allOf'
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/BooleanCharacteristic_FVO_allOf'
    BusinessPartner:
      allOf:
        - $ref: '#/components/schemas/PartyRole'
      description: 'When business partner is the BusinessPartner '
      type: object
    BusinessPartner_FVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
      description: 'When business partner is the BusinessPartner '
      type: object
    BusinessPartner_MVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
      description: 'When business partner is the BusinessPartner '
      type: object
    CalendarPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/CalendarPeriod_allOf'
      discriminator:
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod'
        propertyName: '@type'
    CalendarPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/CalendarPeriod_FVO_allOf'
      discriminator:
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_FVO'
        propertyName: '@type'
    CalendarPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/CalendarPeriod_MVO_allOf'
      discriminator:
        mapping:
          CalendarPeriod: '#/components/schemas/CalendarPeriod_MVO'
        propertyName: '@type'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Characteristic_allOf'
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic'
        propertyName: '@type'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/CharacteristicRelationship_allOf'
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
        propertyName: '@type'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/CharacteristicRelationship_FVO_allOf'
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
        propertyName: '@type'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/CharacteristicRelationship_allOf'
      discriminator:
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
        propertyName: '@type'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Characteristic_FVO_allOf'
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_FVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_FVO'
        propertyName: '@type'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Characteristic_MVO_allOf'
      discriminator:
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          BooleanCharacteristic: '#/components/schemas/BooleanCharacteristic_MVO'
          BooleanArrayCharacteristic: '#/components/schemas/BooleanArrayCharacteristic_MVO'
        propertyName: '@type'
    ConstraintRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/ConstraintRef_allOf'
      discriminator:
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef'
        propertyName: '@type'
    ConstraintRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - $ref: '#/components/schemas/ConstraintRef_allOf'
      discriminator:
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_FVO'
        propertyName: '@type'
    ConstraintRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/ConstraintRef_allOf'
      discriminator:
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_MVO'
        propertyName: '@type'
    Consumer:
      allOf:
        - $ref: '#/components/schemas/PartyRole'
      type: object
    Consumer_FVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
      type: object
    Consumer_MVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
      type: object
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ContactMedium_allOf'
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
        propertyName: '@type'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/ContactMedium_allOf'
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
        propertyName: '@type'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ContactMedium_allOf'
      discriminator:
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
        propertyName: '@type'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/CreditProfile_allOf'
      discriminator:
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
        propertyName: '@type'
    CreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/CreditProfile_allOf'
      discriminator:
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_FVO'
        propertyName: '@type'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/CreditProfile_allOf'
      discriminator:
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
        propertyName: '@type'
    Disability:
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          description: Code of the disability
          type: string
        disabilityName:
          description: Name of the disability
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    Entity:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
      description: Base entity schema for use in TMForum Open-APIs. Property.
      type: object
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - $ref: '#/components/schemas/EntityRef_allOf'
    EntityRefOrValue:
      discriminator:
        mapping:
          Entity: '#/components/schemas/Entity'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/EntityRef'
      type: object
    EntityRefOrValue_FVO:
      discriminator:
        mapping:
          Entity: '#/components/schemas/Entity_FVO'
          EntityRef: '#/components/schemas/EntityRef_FVO'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          PartyRef: '#/components/schemas/PartyRef_FVO'
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
          IntentRef: '#/components/schemas/IntentRef_FVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      type: object
    EntityRefOrValue_MVO:
      discriminator:
        mapping:
          Entity: '#/components/schemas/Entity_MVO'
          EntityRef: '#/components/schemas/EntityRef'
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/EntityRef'
      type: object
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - $ref: '#/components/schemas/EntityRef_allOf'
    EntityRelationship:
      description: >-
        A uni-directionmal relationship from this entity to a target entity
        instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          description: The association role for this entity
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          description: 'When sub-classing, this defines the super-class'
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
          type: string
        relationshipType:
          description: >-
            Type of relationship such as migration, substitution, dependency,
            exclusivity
          type: string
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      type: object
    EntityRelationship_FVO:
      description: >-
        A uni-directionmal relationship from this entity to a target entity
        instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          description: The association role for this entity
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef_FVO'
        '@baseType':
          description: 'When sub-classing, this defines the super-class'
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
          type: string
        relationshipType:
          description: >-
            Type of relationship such as migration, substitution, dependency,
            exclusivity
          type: string
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      required:
        - '@referredType'
        - '@type'
        - id
        - relationshipType
      type: object
    EntityRelationship_MVO:
      description: >-
        A uni-directionmal relationship from this entity to a target entity
        instance
      properties:
        href:
          type: string
        name:
          type: string
        role:
          description: The association role for this entity
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/EntityRef'
        '@baseType':
          description: 'When sub-classing, this defines the super-class'
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
          type: string
        relationshipType:
          description: >-
            Type of relationship such as migration, substitution, dependency,
            exclusivity
          type: string
        id:
          type: string
        '@referredType':
          type: string
        '@type':
          type: string
      type: object
    Entity_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
      description: Base entity schema for use in TMForum Open-APIs. Property.
      type: object
    Entity_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
      description: Base entity schema for use in TMForum Open-APIs. Property.
      type: object
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Event_allOf'
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Event_FVO_allOf'
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Event_MVO_allOf'
    Expression:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Expression_allOf'
      discriminator:
        mapping:
          Expression: '#/components/schemas/Expression'
        propertyName: '@type'
    ExpressionLanguageEnum:
      description: >-
        Possible values for the serialized Expression language of an intent or
        Intent report
      enum:
        - Turtle
        - JSON-LD
        - RDF-XML
        - Other
      type: string
    Expression_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Expression_FVO_allOf'
      discriminator:
        mapping:
          Expression: '#/components/schemas/Expression_FVO'
        propertyName: '@type'
    Expression_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Expression_allOf'
      discriminator:
        mapping:
          Expression: '#/components/schemas/Expression_MVO'
        propertyName: '@type'
    Extensible:
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a
        schema it means that the Entity described by the schema  MUST be
        extended with the @type
      properties:
        '@type':
          description: 'When sub-classing, this defines the sub-class Extensible name'
          type: string
        '@baseType':
          description: 'When sub-classing, this defines the super-class'
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
          type: string
      required:
        - '@type'
      type: object
    Extensible_FVO:
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a
        schema it means that the Entity described by the schema  MUST be
        extended with the @type
      properties:
        '@type':
          description: 'When sub-classing, this defines the sub-class Extensible name'
          type: string
        '@baseType':
          description: 'When sub-classing, this defines the super-class'
          type: string
        '@schemaLocation':
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
          type: string
      required:
        - '@type'
      type: object
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ExternalIdentifier_allOf'
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
        propertyName: '@type'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/ExternalIdentifier_FVO_allOf'
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
        propertyName: '@type'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ExternalIdentifier_allOf'
      discriminator:
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
        propertyName: '@type'
    Feature:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Feature_allOf'
      discriminator:
        mapping:
          Feature: '#/components/schemas/Feature'
        propertyName: '@type'
    FeatureRelationship:
      description: Configuration feature
      properties:
        relationshipType:
          description: This is the type of the feature relationship.
          enum:
            - excluded
            - includes
            - may include
            - requires
          type: string
        id:
          description: Unique identifier of the target feature.
          type: string
        name:
          description: This is the name of the target feature.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    FeatureRelationship_FVO:
      description: Configuration feature
      properties:
        relationshipType:
          description: This is the type of the feature relationship.
          enum:
            - excluded
            - includes
            - may include
            - requires
          type: string
        id:
          description: Unique identifier of the target feature.
          type: string
        name:
          description: This is the name of the target feature.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      required:
        - name
        - relationshipType
      type: object
    FeatureRelationship_MVO:
      description: Configuration feature
      properties:
        relationshipType:
          description: This is the type of the feature relationship.
          enum:
            - excluded
            - includes
            - may include
            - requires
          type: string
        id:
          description: Unique identifier of the target feature.
          type: string
        name:
          description: This is the name of the target feature.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    Feature_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Feature_FVO_allOf'
      discriminator:
        mapping:
          Feature: '#/components/schemas/Feature_FVO'
        propertyName: '@type'
    Feature_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Feature_MVO_allOf'
      discriminator:
        mapping:
          Feature: '#/components/schemas/Feature_MVO'
        propertyName: '@type'
    GeographicAddress:
      allOf:
        - $ref: '#/components/schemas/Place'
        - $ref: '#/components/schemas/GeographicAddress_allOf'
    GeographicAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO_allOf'
    GeographicAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO_allOf'
    GeographicLocation:
      allOf:
        - $ref: '#/components/schemas/Place'
        - $ref: '#/components/schemas/GeographicLocation_allOf'
    GeographicLocationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
        propertyName: '@type'
      type: object
    GeographicLocationRefOrValue:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the GeographicLocation entity and not the
        GeographicLocationRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicLocationRef'
      type: object
    GeographicLocationRefOrValue_FVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the GeographicLocation entity and not the
        GeographicLocationRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicLocationRef_FVO'
      type: object
    GeographicLocationRefOrValue_MVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the GeographicLocation entity and not the
        GeographicLocationRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicLocationRef_MVO'
      type: object
    GeographicLocationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_FVO'
        propertyName: '@type'
      type: object
    GeographicLocationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        mapping:
          GeographicLocationRef: '#/components/schemas/GeographicLocationRef_MVO'
        propertyName: '@type'
      type: object
    GeographicLocation_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - $ref: '#/components/schemas/GeographicLocation_FVO_allOf'
    GeographicLocation_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - $ref: '#/components/schemas/GeographicLocation_allOf'
    GeographicSite:
      allOf:
        - $ref: '#/components/schemas/Place'
        - $ref: '#/components/schemas/GeographicSite_allOf'
    GeographicSiteRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/GeographicSiteRelationship_allOf'
      discriminator:
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship'
        propertyName: '@type'
    GeographicSiteRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/GeographicSiteRelationship_FVO_allOf'
      discriminator:
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_FVO'
        propertyName: '@type'
    GeographicSiteRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/GeographicSiteRelationship_allOf'
      discriminator:
        mapping:
          GeographicSiteRelationship: '#/components/schemas/GeographicSiteRelationship_MVO'
        propertyName: '@type'
    GeographicSite_FVO:
      allOf:
        - $ref: '#/components/schemas/Place_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO_allOf'
    GeographicSite_MVO:
      allOf:
        - $ref: '#/components/schemas/Place_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO_allOf'
    GeographicSubAddress:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/GeographicSubAddress_allOf'
      discriminator:
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress'
        propertyName: '@type'
    GeographicSubAddressUnit:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/GeographicSubAddressUnit_allOf'
      discriminator:
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit'
        propertyName: '@type'
    GeographicSubAddressUnit_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/GeographicSubAddressUnit_FVO_allOf'
      discriminator:
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_FVO'
        propertyName: '@type'
    GeographicSubAddressUnit_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/GeographicSubAddressUnit_allOf'
      discriminator:
        mapping:
          GeographicSubAddressUnit: '#/components/schemas/GeographicSubAddressUnit_MVO'
        propertyName: '@type'
    GeographicSubAddress_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/GeographicSubAddress_FVO_allOf'
      discriminator:
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_FVO'
        propertyName: '@type'
    GeographicSubAddress_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/GeographicSubAddress_MVO_allOf'
      discriminator:
        mapping:
          GeographicSubAddress: '#/components/schemas/GeographicSubAddress_MVO'
        propertyName: '@type'
    HourPeriod:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/HourPeriod_allOf'
      discriminator:
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod'
        propertyName: '@type'
    HourPeriod_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/HourPeriod_allOf'
      discriminator:
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_FVO'
        propertyName: '@type'
    HourPeriod_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/HourPeriod_allOf'
      discriminator:
        mapping:
          HourPeriod: '#/components/schemas/HourPeriod_MVO'
        propertyName: '@type'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - $ref: '#/components/schemas/Individual_allOf'
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/IndividualIdentification_allOf'
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
        propertyName: '@type'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/IndividualIdentification_FVO_allOf'
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
        propertyName: '@type'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/IndividualIdentification_MVO_allOf'
      discriminator:
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
        propertyName: '@type'
    IndividualStateType:
      description: Valid values for the lifecycle state of the individual
      enum:
        - initialized
        - validated
        - deceased
      type: string
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - $ref: '#/components/schemas/Individual_FVO_allOf'
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - $ref: '#/components/schemas/Individual_MVO_allOf'
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic_allOf'
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic_FVO_allOf'
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/IntegerArrayCharacteristic_FVO_allOf'
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/IntegerCharacteristic_allOf'
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/IntegerCharacteristic_FVO_allOf'
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/IntegerCharacteristic_FVO_allOf'
    Intent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/Intent_allOf'
      discriminator:
        mapping:
          Intent: '#/components/schemas/Intent'
        propertyName: '@type'
    IntentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: 'Intent reference, for when Intent is used by other entities'
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
        propertyName: '@type'
      type: object
    IntentRefOrValue:
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or
        its details be presented)
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef'
          Intent: '#/components/schemas/Intent'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/IntentRef'
        - $ref: '#/components/schemas/Intent'
      type: object
    IntentRefOrValue_FVO:
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or
        its details be presented)
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
          Intent: '#/components/schemas/Intent_FVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/IntentRef_FVO'
        - $ref: '#/components/schemas/Intent_FVO'
      type: object
    IntentRefOrValue_MVO:
      description: >-
        Intent Ref (if Intent already exists) or Value (if Intent be created or
        its details be presented)
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
          Intent: '#/components/schemas/Intent_MVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/IntentRef_MVO'
        - $ref: '#/components/schemas/Intent_MVO'
      type: object
    IntentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: 'Intent reference, for when Intent is used by other entities'
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef_FVO'
        propertyName: '@type'
      type: object
    IntentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: 'Intent reference, for when Intent is used by other entities'
      discriminator:
        mapping:
          IntentRef: '#/components/schemas/IntentRef_MVO'
        propertyName: '@type'
      type: object
    Intent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/Intent_FVO_allOf'
      discriminator:
        mapping:
          Intent: '#/components/schemas/Intent_FVO'
        propertyName: '@type'
    Intent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/Intent_MVO_allOf'
      discriminator:
        mapping:
          Intent: '#/components/schemas/Intent_MVO'
        propertyName: '@type'
    LanguageAbility:
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          description: Language code (RFC 5646)
          type: string
        languageName:
          description: Language name
          type: string
        isFavouriteLanguage:
          description: >-
            A “true” value specifies whether the language is considered by the
            individual as his favourite one
          type: boolean
        writingProficiency:
          description: Writing proficiency evaluated for this language
          type: string
        readingProficiency:
          description: Reading proficiency evaluated for this language
          type: string
        speakingProficiency:
          description: Speaking proficiency evaluated for this language
          type: string
        listeningProficiency:
          description: Listening proficiency evaluated for this language
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    Note:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Note_allOf'
      discriminator:
        mapping:
          Note: '#/components/schemas/Note'
        propertyName: '@type'
    Note_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Note_allOf'
      discriminator:
        mapping:
          Note: '#/components/schemas/Note_FVO'
        propertyName: '@type'
    Note_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Note_allOf'
      discriminator:
        mapping:
          Note: '#/components/schemas/Note_MVO'
        propertyName: '@type'
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/NumberArrayCharacteristic_allOf'
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/NumberArrayCharacteristic_FVO_allOf'
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/NumberArrayCharacteristic_FVO_allOf'
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/NumberCharacteristic_allOf'
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/NumberCharacteristic_FVO_allOf'
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/NumberCharacteristic_FVO_allOf'
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic_allOf'
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic_FVO_allOf'
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/ObjectArrayCharacteristic_FVO_allOf'
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/ObjectCharacteristic_allOf'
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/ObjectCharacteristic_FVO_allOf'
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/ObjectCharacteristic_FVO_allOf'
    OrderItemActionType:
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
      type: string
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - $ref: '#/components/schemas/Organization_allOf'
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationChildRelationship_allOf'
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
        propertyName: '@type'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/OrganizationChildRelationship_FVO_allOf'
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
        propertyName: '@type'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationChildRelationship_MVO_allOf'
      discriminator:
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
        propertyName: '@type'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationIdentification_allOf'
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
        propertyName: '@type'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/OrganizationIdentification_FVO_allOf'
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
        propertyName: '@type'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationIdentification_MVO_allOf'
      discriminator:
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
        propertyName: '@type'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationParentRelationship_allOf'
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
        propertyName: '@type'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/OrganizationParentRelationship_FVO_allOf'
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
        propertyName: '@type'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OrganizationParentRelationship_MVO_allOf'
      discriminator:
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
        propertyName: '@type'
    OrganizationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
        propertyName: '@type'
      type: object
    OrganizationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
        propertyName: '@type'
      type: object
    OrganizationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
        propertyName: '@type'
      type: object
    OrganizationStateType:
      description: Valid values for the lifecycle state of the organization
      enum:
        - initialized
        - validated
        - closed
      type: string
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - $ref: '#/components/schemas/Organization_FVO_allOf'
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - $ref: '#/components/schemas/Organization_MVO_allOf'
    OtherNameIndividual:
      description: >-
        Keeps track of other names, for example the old name of a woman before
        marriage or an artist name.
      properties:
        title:
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
          type: string
        aristocraticTitle:
          description: 'e.g. Baron, Graf, Earl, etc.'
          type: string
        generation:
          description: 'e.g. Sr, Jr, etc.'
          type: string
        givenName:
          description: First name
          type: string
        preferredGivenName:
          description: >-
            Contains the chosen name by which the person prefers to be
            addressed. Note: This name may be a name other than a given name,
            such as a nickname
          type: string
        familyNamePrefix:
          description: Family name prefix
          type: string
        familyName:
          description: >-
            Contains the non-chosen or inherited name. Also known as last name
            in the Western context
          type: string
        legalName:
          description: Legal name or birth name (name one has for official purposes)
          type: string
        middleName:
          description: Middle name or initial
          type: string
        fullName:
          description: 'Full name flatten (first, middle, and last names)'
          type: string
        formattedName:
          description: >-
            . A fully formatted name in one string with all of its pieces in
            their proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean, etc.)
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OtherNameOrganization_allOf'
      discriminator:
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
        propertyName: '@type'
    OtherNameOrganization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/OtherNameOrganization_allOf'
      discriminator:
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_FVO'
        propertyName: '@type'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/OtherNameOrganization_allOf'
      discriminator:
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
        propertyName: '@type'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/Party_allOf'
      discriminator:
        mapping:
          Party: '#/components/schemas/Party'
          Organization: '#/components/schemas/Organization'
          Individual: '#/components/schemas/Individual'
        propertyName: '@type'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/PartyCreditProfile_allOf'
      discriminator:
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
        propertyName: '@type'
    PartyCreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/PartyCreditProfile_allOf'
      discriminator:
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_FVO'
        propertyName: '@type'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/PartyCreditProfile_allOf'
      discriminator:
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
        propertyName: '@type'
    PartyOrPartyRole:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      type: object
    PartyOrPartyRole_FVO:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      type: object
    PartyOrPartyRole_MVO:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      type: object
    PartyRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
        propertyName: '@type'
      type: object
    PartyRefOrPartyRoleRef:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      type: object
    PartyRefOrPartyRoleRef_FVO:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
      type: object
    PartyRefOrPartyRoleRef_MVO:
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      type: object
    PartyRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
        propertyName: '@type'
      type: object
    PartyRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: A Party reference
      discriminator:
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
        propertyName: '@type'
      type: object
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/PartyRole_allOf'
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          Producer: '#/components/schemas/Producer'
          Consumer: '#/components/schemas/Consumer'
          BusinessPartner: '#/components/schemas/BusinessPartner'
        propertyName: '@type'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/PartyRoleRef_allOf'
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
        propertyName: '@type'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_allOf'
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
        propertyName: '@type'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/PartyRoleRef_allOf'
      discriminator:
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
        propertyName: '@type'
    PartyRoleSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Party role specification reference. A party role specification gives
        additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
        propertyName: '@type'
      type: object
    PartyRoleSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: >-
        Party role specification reference. A party role specification gives
        additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
        propertyName: '@type'
      type: object
    PartyRoleSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        Party role specification reference. A party role specification gives
        additional details on the part played by a party in a given context.
      discriminator:
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
        propertyName: '@type'
      type: object
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO_allOf'
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
        propertyName: '@type'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO_allOf'
      discriminator:
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          Producer: '#/components/schemas/Producer_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
        propertyName: '@type'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/Party_FVO_allOf'
      discriminator:
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          Individual: '#/components/schemas/Individual_FVO'
        propertyName: '@type'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/Party_MVO_allOf'
      discriminator:
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          Individual: '#/components/schemas/Individual_MVO'
        propertyName: '@type'
    PaymentMethodRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of
        payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
        propertyName: '@type'
      type: object
    PaymentMethodRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of
        payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
        propertyName: '@type'
      type: object
    PaymentMethodRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of
        payment (e.g direct debit).
      discriminator:
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
        propertyName: '@type'
      type: object
    Place:
      allOf:
        - $ref: '#/components/schemas/Entity'
      description: Place reference.
      discriminator:
        mapping:
          Place: '#/components/schemas/Place'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicAddress: '#/components/schemas/GeographicAddress'
        propertyName: '@type'
      type: object
    PlaceRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: Place reference.
      discriminator:
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef'
        propertyName: '@type'
      type: object
    PlaceRefOrValue:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Place entity and not the PlaceRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation'
          GeographicSite: '#/components/schemas/GeographicSite'
          GeographicAddress: '#/components/schemas/GeographicAddress'
          PlaceRef: '#/components/schemas/PlaceRef'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation'
        - $ref: '#/components/schemas/GeographicSite'
        - $ref: '#/components/schemas/GeographicAddress'
        - $ref: '#/components/schemas/PlaceRef'
      type: object
    PlaceRefOrValue_FVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Place entity and not the PlaceRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_FVO'
        - $ref: '#/components/schemas/GeographicSite_FVO'
        - $ref: '#/components/schemas/GeographicAddress_FVO'
        - $ref: '#/components/schemas/PlaceRef_FVO'
      type: object
    PlaceRefOrValue_MVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Place entity and not the PlaceRefOrValue class itself
      discriminator:
        mapping:
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
        propertyName: '@type'
      oneOf:
        - $ref: '#/components/schemas/GeographicLocation_MVO'
        - $ref: '#/components/schemas/GeographicSite_MVO'
        - $ref: '#/components/schemas/GeographicAddress_MVO'
        - $ref: '#/components/schemas/PlaceRef_MVO'
      type: object
    PlaceRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: Place reference.
      discriminator:
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_FVO'
        propertyName: '@type'
      type: object
    PlaceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: Place reference.
      discriminator:
        mapping:
          PlaceRef: '#/components/schemas/PlaceRef_MVO'
        propertyName: '@type'
      type: object
    Place_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
      description: Place reference.
      discriminator:
        mapping:
          Place: '#/components/schemas/Place_FVO'
          GeographicSite: '#/components/schemas/GeographicSite_FVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_FVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_FVO'
        propertyName: '@type'
      type: object
    Place_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
      description: Place reference.
      discriminator:
        mapping:
          Place: '#/components/schemas/Place_MVO'
          GeographicSite: '#/components/schemas/GeographicSite_MVO'
          GeographicLocation: '#/components/schemas/GeographicLocation_MVO'
          GeographicAddress: '#/components/schemas/GeographicAddress_MVO'
        propertyName: '@type'
      type: object
    Producer:
      allOf:
        - $ref: '#/components/schemas/PartyRole'
      type: object
    Producer_FVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
      type: object
    Producer_MVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
      type: object
    Quantity:
      description: An amount in a given unit
      properties:
        amount:
          default: 1
          description: Numeric value in a given unit
          format: float
          type: number
        units:
          description: Unit
          type: string
      type: object
    RelatedEntityRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedEntityRefOrValue_allOf'
      discriminator:
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue'
        propertyName: '@type'
    RelatedEntityRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO_allOf'
      discriminator:
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_FVO'
        propertyName: '@type'
    RelatedEntityRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedEntityRefOrValue_MVO_allOf'
      discriminator:
        mapping:
          RelatedEntityRefOrValue: '#/components/schemas/RelatedEntityRefOrValue_MVO'
        propertyName: '@type'
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPartyOrPartyRole_allOf'
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
        propertyName: '@type'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO_allOf'
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
        propertyName: '@type'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO_allOf'
      discriminator:
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
        propertyName: '@type'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_allOf'
      discriminator:
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
        propertyName: '@type'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO_allOf'
      discriminator:
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
        propertyName: '@type'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO_allOf'
      discriminator:
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
        propertyName: '@type'
    RelatedPlaceRefOrValue:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue_allOf'
      discriminator:
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue'
        propertyName: '@type'
    RelatedPlaceRefOrValue_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO_allOf'
      discriminator:
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
        propertyName: '@type'
    RelatedPlaceRefOrValue_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO_allOf'
      discriminator:
        mapping:
          RelatedPlaceRefOrValue: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
        propertyName: '@type'
    RelatedServiceOrderItem:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedServiceOrderItem_allOf'
      discriminator:
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem'
        propertyName: '@type'
    RelatedServiceOrderItem_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/RelatedServiceOrderItem_allOf'
      discriminator:
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_FVO'
        propertyName: '@type'
    RelatedServiceOrderItem_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/RelatedServiceOrderItem_allOf'
      discriminator:
        mapping:
          RelatedServiceOrderItem: '#/components/schemas/RelatedServiceOrderItem_MVO'
        propertyName: '@type'
    ResourceRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: 'Resource reference, for when Resource is used by other entities.'
      discriminator:
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef'
        propertyName: '@type'
      type: object
    ResourceRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: 'Resource reference, for when Resource is used by other entities.'
      discriminator:
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_FVO'
        propertyName: '@type'
      type: object
    ResourceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      description: 'Resource reference, for when Resource is used by other entities.'
      discriminator:
        mapping:
          ResourceRef: '#/components/schemas/ResourceRef_MVO'
        propertyName: '@type'
      type: object
    Service:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/Service_allOf'
      discriminator:
        mapping:
          Service: '#/components/schemas/Service'
        propertyName: '@type'
    ServiceAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - $ref: '#/components/schemas/ServiceAttributeValueChangeEvent_allOf'
      discriminator:
        mapping:
          ServiceAttributeValueChangeEvent: '#/components/schemas/ServiceAttributeValueChangeEvent'
        propertyName: '@type'
    ServiceAttributeValueChangeEventPayload:
      description: ServiceAttributeValueChangeEventPayload generic structure
      properties:
        service:
          $ref: '#/components/schemas/Service'
      type: object
    ServiceCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - $ref: '#/components/schemas/ServiceCreateEvent_allOf'
      discriminator:
        mapping:
          ServiceCreateEvent: '#/components/schemas/ServiceCreateEvent'
        propertyName: '@type'
    ServiceCreateEventPayload:
      description: ServiceCreateEventPayload generic structure
      properties:
        service:
          $ref: '#/components/schemas/Service'
      type: object
    ServiceDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - $ref: '#/components/schemas/ServiceDeleteEvent_allOf'
      discriminator:
        mapping:
          ServiceDeleteEvent: '#/components/schemas/ServiceDeleteEvent'
        propertyName: '@type'
    ServiceDeleteEventPayload:
      description: ServiceDeleteEventPayload generic structure
      properties:
        service:
          $ref: '#/components/schemas/Service'
      type: object
    ServiceOperatingStatusChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - $ref: '#/components/schemas/ServiceOperatingStatusChangeEvent_allOf'
      discriminator:
        mapping:
          ServiceOperatingStatusChangeEvent: '#/components/schemas/ServiceOperatingStatusChangeEvent'
        propertyName: '@type'
    ServiceOperatingStatusChangeEventPayload:
      description: ServiceOperatingStatusChangeEventPayload generic structure
      properties:
        service:
          $ref: '#/components/schemas/Service'
      type: object
    ServiceOperatingStatusType:
      description: Valid values for the Operating status of the service
      enum:
        - pending
        - configured
        - starting
        - running
        - degraded
        - failed
        - limited
        - stopping
        - stopped
        - unknown
      type: string
    ServiceRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: 'Service reference, for when Service is used by other entities.'
      discriminator:
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef'
        propertyName: '@type'
      type: object
    ServiceRefOrValue:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Service entity and not the ServiceRefOrValue class itself
      discriminator:
        mapping:
          Service: '#/components/schemas/Service'
          ServiceRef: '#/components/schemas/ServiceRef'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/Service'
        - $ref: '#/components/schemas/ServiceRef'
      type: object
    ServiceRefOrValue_FVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Service entity and not the ServiceRefOrValue class itself
      discriminator:
        mapping:
          Service: '#/components/schemas/Service_FVO'
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/Service_FVO'
        - $ref: '#/components/schemas/ServiceRef_FVO'
      type: object
    ServiceRefOrValue_MVO:
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are
        related to the Service entity and not the ServiceRefOrValue class itself
      discriminator:
        mapping:
          Service: '#/components/schemas/Service_MVO'
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
        propertyName: '@type'
      anyOf:
        - $ref: '#/components/schemas/Service_MVO'
        - $ref: '#/components/schemas/ServiceRef_MVO'
      type: object
    ServiceRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      description: 'Service reference, for when Service is used by other entities.'
      discriminator:
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_FVO'
        propertyName: '@type'
      type: object
    ServiceRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      description: 'Service reference, for when Service is used by other entities.'
      discriminator:
        mapping:
          ServiceRef: '#/components/schemas/ServiceRef_MVO'
        propertyName: '@type'
      type: object
    ServiceRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ServiceRelationship_allOf'
      discriminator:
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship'
        propertyName: '@type'
    ServiceRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/ServiceRelationship_FVO_allOf'
      discriminator:
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_FVO'
        propertyName: '@type'
    ServiceRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/ServiceRelationship_MVO_allOf'
      discriminator:
        mapping:
          ServiceRelationship: '#/components/schemas/ServiceRelationship_MVO'
        propertyName: '@type'
    ServiceSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/ServiceSpecificationRef_allOf'
      discriminator:
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef'
        propertyName: '@type'
    ServiceSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - $ref: '#/components/schemas/ServiceSpecificationRef_allOf'
      discriminator:
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_FVO'
        propertyName: '@type'
    ServiceSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/ServiceSpecificationRef_allOf'
      discriminator:
        mapping:
          ServiceSpecificationRef: '#/components/schemas/ServiceSpecificationRef_MVO'
        propertyName: '@type'
    ServiceStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - $ref: '#/components/schemas/ServiceStateChangeEvent_allOf'
      discriminator:
        mapping:
          ServiceStateChangeEvent: '#/components/schemas/ServiceStateChangeEvent'
        propertyName: '@type'
    ServiceStateChangeEventPayload:
      description: ServiceStateChangeEventPayload generic structure
      properties:
        service:
          $ref: '#/components/schemas/Service'
      type: object
    ServiceStateType:
      description: Valid values for the lifecycle state of the service
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
        - suspended
      type: string
    Service_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/Service_FVO_allOf'
      discriminator:
        mapping:
          Service: '#/components/schemas/Service_FVO'
        propertyName: '@type'
    Service_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/Service_MVO_allOf'
      discriminator:
        mapping:
          Service: '#/components/schemas/Service_MVO'
        propertyName: '@type'
    Skill:
      description: >-
        Skills evaluated for an individual with a level and possibly with a
        limited validity when an obsolescence is defined (Ex: the first-aid
        certificate first level is limited to one year and an update training is
        required each year to keep the level).
      properties:
        skillCode:
          description: Code of the skill
          type: string
        skillName:
          description: 'Name of the skill, such as Java language'
          type: string
        evaluatedLevel:
          description: Level of expertise in a skill evaluated for an individual
          type: string
        comment:
          description: A free text comment linked to the evaluation done
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    StandardIdentifier:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/StandardIdentifier_allOf'
      discriminator:
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier'
        propertyName: '@type'
    StandardIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - $ref: '#/components/schemas/StandardIdentifier_allOf'
      discriminator:
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_FVO'
        propertyName: '@type'
    StandardIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - $ref: '#/components/schemas/StandardIdentifier_allOf'
      discriminator:
        mapping:
          StandardIdentifier: '#/components/schemas/StandardIdentifier_MVO'
        propertyName: '@type'
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/StringArrayCharacteristic_allOf'
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/StringArrayCharacteristic_FVO_allOf'
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/StringArrayCharacteristic_FVO_allOf'
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - $ref: '#/components/schemas/StringCharacteristic_allOf'
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - $ref: '#/components/schemas/StringCharacteristic_FVO_allOf'
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - $ref: '#/components/schemas/StringCharacteristic_FVO_allOf'
    Supplier:
      allOf:
        - $ref: '#/components/schemas/PartyRole'
      description: 'When business partner is the Supplier '
      type: object
    Supplier_FVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
      description: 'When business partner is the Supplier '
      type: object
    Supplier_MVO:
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
      description: 'When business partner is the Supplier '
      type: object
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/TaxDefinition_allOf'
      discriminator:
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
        propertyName: '@type'
    TaxDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/TaxDefinition_allOf'
      discriminator:
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_FVO'
        propertyName: '@type'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/TaxDefinition_allOf'
      discriminator:
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
        propertyName: '@type'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/TaxExemptionCertificate_allOf'
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
        propertyName: '@type'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/TaxExemptionCertificate_FVO_allOf'
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
        propertyName: '@type'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/TaxExemptionCertificate_MVO_allOf'
      discriminator:
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
        propertyName: '@type'
    TimePeriod:
      description: >-
        A period of time, either as a deadline (endDateTime only) a
        startDateTime only, or both
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          example: 1985-04-12T23:20:50.520Z
          format: date-time
          type: string
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          example: 1985-04-12T23:20:50.520Z
          format: date-time
          type: string
      type: object
    Error:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Error_allOf'
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      discriminator:
        mapping:
          Error: '#/components/schemas/Error'
        propertyName: '@type'
    Hub_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Hub_FVO_allOf'
      description: >-
        Sets the communication endpoint address the service instance must use to
        deliver notification information
      required:
        - callback
      type: object
    Hub:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/Hub_allOf'
      description: >-
        Sets the communication endpoint address the service instance must use to
        deliver notification information
      type: object
    JsonPatch:
      description: A JSONPatch document as defined by RFC 6902
      properties:
        op:
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
          type: string
        path:
          description: A JSON-Pointer
          type: string
        value:
          description: The value to be used within the operations.
        from:
          description: A string containing a JSON Pointer value.
          type: string
      required:
        - op
        - path
      type: object
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      items:
        $ref: '#/components/schemas/JsonPatch'
      type: array
    Attachment_allOf:
      description: >-
        Complements the description of an element (for instance a product)
        through video, pictures...
      properties:
        name:
          description: The name of the attachment
          type: string
        description:
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
          type: string
        url:
          description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
          example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
          type: string
        content:
          description: >-
            The actual contents of the attachment object, if embedded, encoded
            as base64
          format: base64
          type: string
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachmentType:
          description: >-
            a business characterization of the purpose of the attachment, for
            example logo, instructionManual, contractCopy
          type: string
        mimeType:
          description: >-
            a technical characterization of the attachment content format using
            IETF Mime Types
          type: string
      type: object
    AttachmentRef_allOf:
      description: >-
        Attachment reference. An attachment complements the description of an
        element (for instance a product) through video, pictures
      properties:
        description:
          description: A narrative text describing the content of the attachment
          type: string
        url:
          description: Link to the attachment media/content
          type: string
      type: object
    Attachment_FVO_allOf:
      description: >-
        Complements the description of an element (for instance a product)
        through video, pictures...
      properties:
        name:
          description: The name of the attachment
          type: string
        description:
          description: A narrative text describing the content of the attachment
          example: Photograph of the Product
          type: string
        url:
          description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
          example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
          type: string
        content:
          description: >-
            The actual contents of the attachment object, if embedded, encoded
            as base64
          format: base64
          type: string
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachmentType:
          description: >-
            a business characterization of the purpose of the attachment, for
            example logo, instructionManual, contractCopy
          type: string
        mimeType:
          description: >-
            a technical characterization of the attachment content format using
            IETF Mime Types
          type: string
      required:
        - attachmentType
        - mimeType
      type: object
    BaseEvent_allOf:
      description: Base event with common attributes.
      properties:
        event:
          type: object
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explanatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
      type: object
    BooleanArrayCharacteristic_allOf:
      description: A characteristic which value is an array of Boolean(s).
      properties:
        value:
          items:
            type: boolean
          type: array
      type: object
    BooleanArrayCharacteristic_FVO_allOf:
      description: A characteristic which value is an array of Boolean(s).
      properties:
        value:
          items:
            type: boolean
          type: array
      required:
        - value
      type: object
    BooleanCharacteristic_allOf:
      description: A characteristic which value is a Boolean.
      properties:
        value:
          description: Value of the characteristic
          type: boolean
      type: object
    BooleanCharacteristic_FVO_allOf:
      description: A characteristic which value is a Boolean.
      properties:
        value:
          description: Value of the characteristic
          type: boolean
      required:
        - value
      type: object
    CalendarPeriod_allOf:
      properties:
        day:
          description: >-
            Day where the calendar status applies (e.g.: monday, mon-to-fri,
            weekdays, weekend, all week, ...)
          type: string
        timeZone:
          description: >-
            Indication of the timezone applicable to the calendar information
            (e.g.: Paris, GMT+1)
          type: string
        hourPeriod:
          items:
            $ref: '#/components/schemas/HourPeriod'
          type: array
        status:
          description: >-
            Indication of the availability of the caledar period (e.g.:
            available, booked, etc.)
          type: string
      type: object
    CalendarPeriod_FVO_allOf:
      properties:
        day:
          description: >-
            Day where the calendar status applies (e.g.: monday, mon-to-fri,
            weekdays, weekend, all week, ...)
          type: string
        timeZone:
          description: >-
            Indication of the timezone applicable to the calendar information
            (e.g.: Paris, GMT+1)
          type: string
        hourPeriod:
          items:
            $ref: '#/components/schemas/HourPeriod_FVO'
          type: array
        status:
          description: >-
            Indication of the availability of the caledar period (e.g.:
            available, booked, etc.)
          type: string
      required:
        - status
      type: object
    CalendarPeriod_MVO_allOf:
      properties:
        day:
          description: >-
            Day where the calendar status applies (e.g.: monday, mon-to-fri,
            weekdays, weekend, all week, ...)
          type: string
        timeZone:
          description: >-
            Indication of the timezone applicable to the calendar information
            (e.g.: Paris, GMT+1)
          type: string
        hourPeriod:
          items:
            $ref: '#/components/schemas/HourPeriod_MVO'
          type: array
        status:
          description: >-
            Indication of the availability of the caledar period (e.g.:
            available, booked, etc.)
          type: string
      type: object
    Characteristic_allOf:
      description: >-
        Describes a given characteristic of an object or entity through a
        name/value pair.
      properties:
        id:
          description: Unique identifier of the characteristic
          type: string
        name:
          description: Name of the characteristic
          type: string
        valueType:
          description: Data type of the value of the characteristic
          type: string
        characteristicRelationship:
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
          type: array
      type: object
    CharacteristicRelationship_allOf:
      description: Another Characteristic that is related to the current Characteristic;
      properties:
        id:
          description: Unique identifier of the characteristic
          type: string
        relationshipType:
          description: The type of relationship
          type: string
      type: object
    CharacteristicRelationship_FVO_allOf:
      description: Another Characteristic that is related to the current Characteristic;
      properties:
        id:
          description: Unique identifier of the characteristic
          type: string
        relationshipType:
          description: The type of relationship
          type: string
      required:
        - id
        - relationshipType
      type: object
    Characteristic_FVO_allOf:
      description: >-
        Describes a given characteristic of an object or entity through a
        name/value pair.
      properties:
        id:
          description: Unique identifier of the characteristic
          type: string
        name:
          description: Name of the characteristic
          type: string
        valueType:
          description: Data type of the value of the characteristic
          type: string
        characteristicRelationship:
          items:
            $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          type: array
      required:
        - name
      type: object
    Characteristic_MVO_allOf:
      description: >-
        Describes a given characteristic of an object or entity through a
        name/value pair.
      properties:
        id:
          description: Unique identifier of the characteristic
          type: string
        name:
          description: Name of the characteristic
          type: string
        valueType:
          description: Data type of the value of the characteristic
          type: string
        characteristicRelationship:
          items:
            $ref: '#/components/schemas/CharacteristicRelationship_MVO'
          type: array
      type: object
    ConstraintRef_allOf:
      description: >-
        Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
      properties:
        version:
          description: constraint version
          type: string
      type: object
    ContactMedium_allOf:
      description: Indicates the contact medium that could be used to contact the party.
      properties:
        id:
          description: Identifier for this contact medium.
          type: string
        preferred:
          description: 'If true, indicates that is the preferred contact medium'
          type: boolean
        contactType:
          description: >-
            Type of the contact medium to qualifiy it like pro email / personal
            email. This is not used to define the contact medium used.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    CreditProfile_allOf:
      description: >-
        Credit profile for the party (containing credit scoring, ...). By
        default only the current credit profile  is retrieved. It can be used as
        a list to give the party credit profiles history, the first one in the
        list will be the current one.
      properties:
        creditProfileDate:
          description: The date the profile was established
          format: date-time
          type: string
        creditRiskRating:
          description: This is an integer whose value is used to rate the risk
          type: integer
        creditScore:
          description: >-
            A measure of a person or organizations creditworthiness calculated
            on the basis of a combination of factors such as their income and
            credit history
          type: integer
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    EntityRef_allOf:
      description: Entity reference schema to be use for all entityRef class.
      properties:
        id:
          description: The identifier of the referred entity.
          type: string
        href:
          description: The URI of the referred entity.
          type: string
        name:
          description: Name of the referred entity.
          type: string
        '@referredType':
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
          type: string
      required:
        - id
      type: object
    Event_allOf:
      description: event with common attributes.
      properties:
        href:
          description: Hyperlink reference
          type: string
        id:
          description: unique identifier
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOccurred:
          description: The time the event occurred.
          format: date-time
          type: string
        source:
          $ref: '#/components/schemas/EntityRef'
        reportingSystem:
          $ref: '#/components/schemas/EntityRef'
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
          type: array
        analyticCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        event:
          description: The event linked to the involved resource object
          type: object
      type: object
    Event_FVO_allOf:
      description: event with common attributes.
      properties:
        href:
          description: Hyperlink reference
          type: string
        id:
          description: unique identifier
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOccurred:
          description: The time the event occurred.
          format: date-time
          type: string
        source:
          $ref: '#/components/schemas/EntityRef_FVO'
        reportingSystem:
          $ref: '#/components/schemas/EntityRef_FVO'
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
          type: array
        analyticCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        event:
          description: The event linked to the involved resource object
          type: object
      required:
        - event
        - eventId
        - eventTime
        - eventType
      type: object
    Event_MVO_allOf:
      description: event with common attributes.
      properties:
        href:
          description: Hyperlink reference
          type: string
        id:
          description: unique identifier
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOccurred:
          description: The time the event occurred.
          format: date-time
          type: string
        source:
          $ref: '#/components/schemas/EntityRef'
        reportingSystem:
          $ref: '#/components/schemas/EntityRef'
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
          type: array
        analyticCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        event:
          description: The event linked to the involved resource object
          type: object
      required:
        - event
        - eventId
        - eventTime
        - eventType
      type: object
    Expression_allOf:
      description: Expression is the ontology-encoded form of the Intent
      properties:
        expressionLanguage:
          $ref: '#/components/schemas/ExpressionLanguageEnum'
        iri:
          description: Internationalized Resource Identifier of the intent Expression
          type: string
        expressionValue:
          description: >-
            expression value is the ontology-encoded form of the Intent such as
            RDF-XML, Turtle, Json-LD,...
          type: string
      type: object
    Expression_FVO_allOf:
      description: Expression is the ontology-encoded form of the Intent
      properties:
        expressionLanguage:
          $ref: '#/components/schemas/ExpressionLanguageEnum'
        iri:
          description: Internationalized Resource Identifier of the intent Expression
          type: string
        expressionValue:
          description: >-
            expression value is the ontology-encoded form of the Intent such as
            RDF-XML, Turtle, Json-LD,...
          type: string
      required:
        - '@type'
        - expressionValue
      type: object
    ExternalIdentifier_allOf:
      description: >-
        An identification of an entity that is owned by or originates in a
        software system different from the current system, for example a
        ProductOrder handed off from a commerce platform into an order handling
        system. The structure identifies the system itself, the nature of the
        entity within the system (e.g. class name) and the unique ID of the
        entity within the system. It is anticipated that multiple external IDs
        can be held for a single entity, e.g. if the entity passed through
        multiple systems on the way to the current system. In this case the
        consumer is expected to sequence the IDs in the array in reverse order
        of provenance, i.e. most recent system first in the list.
      properties:
        owner:
          description: Name of the external system that owns the entity.
          example: MagentoCommerce
          type: string
        externalIdentifierType:
          description: >-
            Type of the identification, typically would be the type of the
            entity within the external system
          example: ProductOrder
          type: string
        id:
          description: identification of the entity within the external system.
          type: string
      type: object
    ExternalIdentifier_FVO_allOf:
      description: >-
        An identification of an entity that is owned by or originates in a
        software system different from the current system, for example a
        ProductOrder handed off from a commerce platform into an order handling
        system. The structure identifies the system itself, the nature of the
        entity within the system (e.g. class name) and the unique ID of the
        entity within the system. It is anticipated that multiple external IDs
        can be held for a single entity, e.g. if the entity passed through
        multiple systems on the way to the current system. In this case the
        consumer is expected to sequence the IDs in the array in reverse order
        of provenance, i.e. most recent system first in the list.
      properties:
        owner:
          description: Name of the external system that owns the entity.
          example: MagentoCommerce
          type: string
        externalIdentifierType:
          description: >-
            Type of the identification, typically would be the type of the
            entity within the external system
          example: ProductOrder
          type: string
        id:
          description: identification of the entity within the external system.
          type: string
      required:
        - id
      type: object
    Feature_allOf:
      description: Configuration feature.
      properties:
        isBundle:
          description: True if this is a feature group. Default is false.
          type: boolean
        featureRelationship:
          items:
            $ref: '#/components/schemas/FeatureRelationship'
          type: array
        featureCharacteristic:
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        constraint:
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef'
          type: array
        isEnabled:
          description: True if this feature is enabled. Default is true.
          type: boolean
        id:
          description: unique identifier
          type: string
        name:
          description: This is the name for the feature.
          type: string
      type: object
    Feature_FVO_allOf:
      description: Configuration feature.
      properties:
        isBundle:
          description: True if this is a feature group. Default is false.
          type: boolean
        featureRelationship:
          items:
            $ref: '#/components/schemas/FeatureRelationship_FVO'
          type: array
        featureCharacteristic:
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        constraint:
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef_FVO'
          type: array
        isEnabled:
          description: True if this feature is enabled. Default is true.
          type: boolean
        id:
          description: unique identifier
          type: string
        name:
          description: This is the name for the feature.
          type: string
      required:
        - name
      type: object
    Feature_MVO_allOf:
      description: Configuration feature.
      properties:
        isBundle:
          description: True if this is a feature group. Default is false.
          type: boolean
        featureRelationship:
          items:
            $ref: '#/components/schemas/FeatureRelationship_MVO'
          type: array
        featureCharacteristic:
          description: This is a list of Characteristics for a particular feature.
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        constraint:
          description: This is a list of feature constraints.
          items:
            $ref: '#/components/schemas/ConstraintRef_MVO'
          type: array
        isEnabled:
          description: True if this feature is enabled. Default is true.
          type: boolean
        id:
          description: unique identifier
          type: string
        name:
          description: This is the name for the feature.
          type: string
      type: object
    GeographicAddress_allOf:
      description: >-
        Structured textual way of describing how to find a Property in an urban
        area (country properties are often defined differently).

        Note : Address corresponds to SID UrbanPropertyAddress
      properties:
        city:
          description: City that the address is in
          type: string
        country:
          description: Country that the address is in
          type: string
        locality:
          description: >-
            An area of defined or undefined boundaries within a local authority
            or other legislatively defined area, usually rural or semi rural in
            nature. [ANZLIC-STREET], or a suburb, a bounded locality within a
            city, town or shire principally of urban character [ANZLICSTREET]
          type: string
        postcode:
          description: >-
            descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also know as zipcode)
          type: string
        stateOrProvince:
          description: the State or Province that the address is in
          type: string
        streetName:
          description: Name of the street or other street type
          type: string
        streetNr:
          description: >-
            Number identifying a specific property on a public street. It may be
            combined with streetNrLast for ranged addresses
          type: string
        streetNrLast:
          description: Last number in a range of street numbers allocated to a property
          type: string
        streetNrLastSuffix:
          description: Last street number suffix for a ranged address
          type: string
        streetNrSuffix:
          description: the first street number suffix
          type: string
        streetSuffix:
          description: A modifier denoting a relative direction
          type: string
        streetType:
          description: >-
            alley, avenue, boulevard, brae, crescent, drive, highway, lane,
            terrace, parade, place, tarn, way, wharf 
          type: string
        countryCode:
          description: >-
            Country codes are short alphabetic or numeric geographical codes
            (geocodes) developed to represent countries and dependent areas, for
            use in data processing and communications. Several different systems
            have been developed to do this. The term country code frequently
            refers to ISO 3166-1 alpha-2 or international dialing codes, the
            E.164 country calling codes.
          items:
            $ref: '#/components/schemas/StandardIdentifier'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
          type: array
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocationRefOrValue'
        geographicSubAddress:
          items:
            $ref: '#/components/schemas/GeographicSubAddress'
          type: array
        geographicAddressType:
          description: 'Classification of the address, e.g., residential, industrial '
          type: string
      type: object
    GeographicAddress_FVO_allOf:
      description: >-
        Structured textual way of describing how to find a Property in an urban
        area (country properties are often defined differently).

        Note : Address corresponds to SID UrbanPropertyAddress
      properties:
        city:
          description: City that the address is in
          type: string
        country:
          description: Country that the address is in
          type: string
        locality:
          description: >-
            An area of defined or undefined boundaries within a local authority
            or other legislatively defined area, usually rural or semi rural in
            nature. [ANZLIC-STREET], or a suburb, a bounded locality within a
            city, town or shire principally of urban character [ANZLICSTREET]
          type: string
        postcode:
          description: >-
            descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also know as zipcode)
          type: string
        stateOrProvince:
          description: the State or Province that the address is in
          type: string
        streetName:
          description: Name of the street or other street type
          type: string
        streetNr:
          description: >-
            Number identifying a specific property on a public street. It may be
            combined with streetNrLast for ranged addresses
          type: string
        streetNrLast:
          description: Last number in a range of street numbers allocated to a property
          type: string
        streetNrLastSuffix:
          description: Last street number suffix for a ranged address
          type: string
        streetNrSuffix:
          description: the first street number suffix
          type: string
        streetSuffix:
          description: A modifier denoting a relative direction
          type: string
        streetType:
          description: >-
            alley, avenue, boulevard, brae, crescent, drive, highway, lane,
            terrace, parade, place, tarn, way, wharf 
          type: string
        countryCode:
          description: >-
            Country codes are short alphabetic or numeric geographical codes
            (geocodes) developed to represent countries and dependent areas, for
            use in data processing and communications. Several different systems
            have been developed to do this. The term country code frequently
            refers to ISO 3166-1 alpha-2 or international dialing codes, the
            E.164 country calling codes.
          items:
            $ref: '#/components/schemas/StandardIdentifier_FVO'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier_FVO'
          type: array
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocationRefOrValue_FVO'
        geographicSubAddress:
          items:
            $ref: '#/components/schemas/GeographicSubAddress_FVO'
          type: array
        geographicAddressType:
          description: 'Classification of the address, e.g., residential, industrial '
          type: string
      type: object
    GeographicAddress_MVO_allOf:
      description: >-
        Structured textual way of describing how to find a Property in an urban
        area (country properties are often defined differently).

        Note : Address corresponds to SID UrbanPropertyAddress
      properties:
        city:
          description: City that the address is in
          type: string
        country:
          description: Country that the address is in
          type: string
        locality:
          description: >-
            An area of defined or undefined boundaries within a local authority
            or other legislatively defined area, usually rural or semi rural in
            nature. [ANZLIC-STREET], or a suburb, a bounded locality within a
            city, town or shire principally of urban character [ANZLICSTREET]
          type: string
        postcode:
          description: >-
            descriptor for a postal delivery area, used to speed and simplify
            the delivery of mail (also know as zipcode)
          type: string
        stateOrProvince:
          description: the State or Province that the address is in
          type: string
        streetName:
          description: Name of the street or other street type
          type: string
        streetNr:
          description: >-
            Number identifying a specific property on a public street. It may be
            combined with streetNrLast for ranged addresses
          type: string
        streetNrLast:
          description: Last number in a range of street numbers allocated to a property
          type: string
        streetNrLastSuffix:
          description: Last street number suffix for a ranged address
          type: string
        streetNrSuffix:
          description: the first street number suffix
          type: string
        streetSuffix:
          description: A modifier denoting a relative direction
          type: string
        streetType:
          description: >-
            alley, avenue, boulevard, brae, crescent, drive, highway, lane,
            terrace, parade, place, tarn, way, wharf 
          type: string
        countryCode:
          description: >-
            Country codes are short alphabetic or numeric geographical codes
            (geocodes) developed to represent countries and dependent areas, for
            use in data processing and communications. Several different systems
            have been developed to do this. The term country code frequently
            refers to ISO 3166-1 alpha-2 or international dialing codes, the
            E.164 country calling codes.
          items:
            $ref: '#/components/schemas/StandardIdentifier_MVO'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier_MVO'
          type: array
        geographicLocation:
          $ref: '#/components/schemas/GeographicLocationRefOrValue_MVO'
        geographicSubAddress:
          items:
            $ref: '#/components/schemas/GeographicSubAddress_MVO'
          type: array
        geographicAddressType:
          description: 'Classification of the address, e.g., residential, industrial '
          type: string
      type: object
    GeographicLocation_allOf:
      description: >-
        A GeographicLocation is a pure-virtual super-class to the
        GeoJSON-aligned geometries of Point (addresses and locations),
        MultiPoint, LineString (streets, highways and boundaries),
        MultiLineString and Polygon (countries, provinces, tracts of land). Use
        the @type attribute to specify which of these is being specified by the
        geometry attribute.
      properties:
        id:
          description: Unique identifier of the geographic location
          type: string
        href:
          description: An URI used to access to the geographic location resource
          type: string
        '@type':
          description: The name of the GeoJSON structure used in the geometry attribute
          enum:
            - GeoJsonPoint
            - GeoJsonMultiPoint
            - GeoJsonLineString
            - GeoJsonMultiLineString
            - GeoJsonPolygon
          type: string
        bbox:
          description: >-
            A bounding box array that contains the geometry. The axes order
            follows the axes order of the geometry
          items:
            type: number
          type: array
      type: object
    GeographicLocation_FVO_allOf:
      description: >-
        A GeographicLocation is a pure-virtual super-class to the
        GeoJSON-aligned geometries of Point (addresses and locations),
        MultiPoint, LineString (streets, highways and boundaries),
        MultiLineString and Polygon (countries, provinces, tracts of land). Use
        the @type attribute to specify which of these is being specified by the
        geometry attribute.
      properties:
        id:
          description: Unique identifier of the geographic location
          type: string
        href:
          description: An URI used to access to the geographic location resource
          type: string
        '@type':
          description: The name of the GeoJSON structure used in the geometry attribute
          enum:
            - GeoJsonPoint
            - GeoJsonMultiPoint
            - GeoJsonLineString
            - GeoJsonMultiLineString
            - GeoJsonPolygon
          type: string
        bbox:
          description: >-
            A bounding box array that contains the geometry. The axes order
            follows the axes order of the geometry
          items:
            type: number
          type: array
      required:
        - '@type'
      type: object
    GeographicSite_allOf:
      properties:
        code:
          description: >-
            A code that may be used for some addressing schemes eg: [ANSI
            T1.253-1999]
          type: string
        creationDate:
          description: Date and time when the GeographicSite was created
          format: date-time
          type: string
        description:
          description: Text describing additional information regarding the site
          type: string
        status:
          description: >-
            The condition of the GeographicSite, such as planned,
            underConstruction, cancelled, active, inactive, former
          type: string
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
          type: array
        calendar:
          items:
            $ref: '#/components/schemas/CalendarPeriod'
          type: array
        place:
          items:
            $ref: '#/components/schemas/PlaceRefOrValue'
          type: array
        siteRelationship:
          items:
            $ref: '#/components/schemas/GeographicSiteRelationship'
          type: array
      type: object
    GeographicSiteRelationship_allOf:
      properties:
        href:
          description: Reference of the related geographic site
          type: string
        role:
          description: Role of the related site in the relationship
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        id:
          description: Unique identifier of the related site entity within the server
          type: string
        relationshipType:
          description: Type of relationship
          type: string
      type: object
    GeographicSiteRelationship_FVO_allOf:
      properties:
        href:
          description: Reference of the related geographic site
          type: string
        role:
          description: Role of the related site in the relationship
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        id:
          description: Unique identifier of the related site entity within the server
          type: string
        relationshipType:
          description: Type of relationship
          type: string
      required:
        - id
        - relationshipType
      type: object
    GeographicSite_FVO_allOf:
      properties:
        code:
          description: >-
            A code that may be used for some addressing schemes eg: [ANSI
            T1.253-1999]
          type: string
        creationDate:
          description: Date and time when the GeographicSite was created
          format: date-time
          type: string
        description:
          description: Text describing additional information regarding the site
          type: string
        status:
          description: >-
            The condition of the GeographicSite, such as planned,
            underConstruction, cancelled, active, inactive, former
          type: string
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier_FVO'
          type: array
        calendar:
          items:
            $ref: '#/components/schemas/CalendarPeriod_FVO'
          type: array
        place:
          items:
            $ref: '#/components/schemas/PlaceRefOrValue_FVO'
          type: array
        siteRelationship:
          items:
            $ref: '#/components/schemas/GeographicSiteRelationship_FVO'
          type: array
      type: object
    GeographicSite_MVO_allOf:
      properties:
        code:
          description: >-
            A code that may be used for some addressing schemes eg: [ANSI
            T1.253-1999]
          type: string
        creationDate:
          description: Date and time when the GeographicSite was created
          format: date-time
          type: string
        description:
          description: Text describing additional information regarding the site
          type: string
        status:
          description: >-
            The condition of the GeographicSite, such as planned,
            underConstruction, cancelled, active, inactive, former
          type: string
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
          type: array
        externalIdentifier:
          items:
            $ref: '#/components/schemas/ExternalIdentifier_MVO'
          type: array
        calendar:
          items:
            $ref: '#/components/schemas/CalendarPeriod_MVO'
          type: array
        place:
          items:
            $ref: '#/components/schemas/PlaceRefOrValue_MVO'
          type: array
        siteRelationship:
          items:
            $ref: '#/components/schemas/GeographicSiteRelationship_MVO'
          type: array
      type: object
    GeographicSubAddress_allOf:
      description: >-
        Representation of a GeographicSubAddress 

        It is used for addressing within a property in an urban area (country
        properties are often defined differently). It may refer to a building, a
        building cluster, or a floor of a multistory building.
      properties:
        buildingName:
          description: allows for buildings that have well-known names
          type: string
        href:
          description: Link to the subAddress
          type: string
        id:
          description: Unique Identifier of the subAddress
          type: string
        levelNumber:
          description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
          type: string
        levelType:
          description: describes level types within a building
          type: string
        name:
          description: >-
            Name of the subAddress to identify it with a meaningful
            identification
          type: string
        privateStreetName:
          description: >-
            private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office.
          type: string
        privateStreetNumber:
          description: private streets numbers internal to a private street
          type: string
        subUnit:
          description: >-
            Representation of a SubUnit. It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/GeographicSubAddressUnit'
          type: array
        subAddressType:
          description: 'Type of subAddress : it can be a subunit or a private street'
          type: string
      type: object
    GeographicSubAddressUnit_allOf:
      description: >-
        Representation of a SubUnit. It is used for describing subunit within a
        subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF, RACK
          type: string
      type: object
    GeographicSubAddressUnit_FVO_allOf:
      description: >-
        Representation of a SubUnit. It is used for describing subunit within a
        subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF.
      properties:
        subUnitNumber:
          description: >-
            The discriminator used for the subunit, often just a simple number
            but may also be a range.
          type: string
        subUnitType:
          description: >-
            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,
            WHARF, RACK
          type: string
      required:
        - subUnitNumber
        - subUnitType
      type: object
    GeographicSubAddress_FVO_allOf:
      description: >-
        Representation of a GeographicSubAddress 

        It is used for addressing within a property in an urban area (country
        properties are often defined differently). It may refer to a building, a
        building cluster, or a floor of a multistory building.
      properties:
        buildingName:
          description: allows for buildings that have well-known names
          type: string
        href:
          description: Link to the subAddress
          type: string
        id:
          description: Unique Identifier of the subAddress
          type: string
        levelNumber:
          description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
          type: string
        levelType:
          description: describes level types within a building
          type: string
        name:
          description: >-
            Name of the subAddress to identify it with a meaningful
            identification
          type: string
        privateStreetName:
          description: >-
            private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office.
          type: string
        privateStreetNumber:
          description: private streets numbers internal to a private street
          type: string
        subUnit:
          description: >-
            Representation of a SubUnit. It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/GeographicSubAddressUnit_FVO'
          type: array
        subAddressType:
          description: 'Type of subAddress : it can be a subunit or a private street'
          type: string
      type: object
    GeographicSubAddress_MVO_allOf:
      description: >-
        Representation of a GeographicSubAddress 

        It is used for addressing within a property in an urban area (country
        properties are often defined differently). It may refer to a building, a
        building cluster, or a floor of a multistory building.
      properties:
        buildingName:
          description: allows for buildings that have well-known names
          type: string
        href:
          description: Link to the subAddress
          type: string
        id:
          description: Unique Identifier of the subAddress
          type: string
        levelNumber:
          description: 'used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2'
          type: string
        levelType:
          description: describes level types within a building
          type: string
        name:
          description: >-
            Name of the subAddress to identify it with a meaningful
            identification
          type: string
        privateStreetName:
          description: >-
            private streets internal to a property (e.g. a university) may have
            internal names that are not recorded by the land title office.
          type: string
        privateStreetNumber:
          description: private streets numbers internal to a private street
          type: string
        subUnit:
          description: >-
            Representation of a SubUnit. It is used for describing subunit
            within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER,
            UNIT, WHARF.
          items:
            $ref: '#/components/schemas/GeographicSubAddressUnit_MVO'
          type: array
        subAddressType:
          description: 'Type of subAddress : it can be a subunit or a private street'
          type: string
      type: object
    HourPeriod_allOf:
      properties:
        endHour:
          description: The time when the status ends applying
          type: string
        startHour:
          description: The time when the status starts applying
          type: string
      type: object
    Individual_allOf:
      description: >-
        Individual represents a single human being (a man, woman or child). The
        individual can be a customer, an employee or any other person that the
        organization needs to store information about.
      properties:
        gender:
          description: Gender
          type: string
        placeOfBirth:
          description: Reference to the place where the individual was born
          type: string
        countryOfBirth:
          description: Country where the individual was born
          type: string
        nationality:
          description: Nationality
          type: string
        maritalStatus:
          description: 'Marital status (married, divorced, widow ...)'
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        deathDate:
          description: Date of death
          format: date-time
          type: string
        title:
          description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
          type: string
        aristocraticTitle:
          description: 'e.g. Baron, Graf, Earl'
          type: string
        generation:
          description: 'e.g.. Sr, Jr, III (the third)'
          type: string
        preferredGivenName:
          description: >-
            Contains the chosen name by which the individual prefers to be
            addressed. Note: This name may be a name other than a given name,
            such as a nickname
          type: string
        familyNamePrefix:
          description: Family name prefix
          type: string
        legalName:
          description: Legal name or birth name (name one has for official purposes)
          type: string
        middleName:
          description: Middles name or initial
          type: string
        name:
          description: >-
            Full name flatten (first, middle, and last names) - this is the name
            that is expected to be presented in reference data types such as
            PartyRef, RelatedParty, etc. that refer to Individual
          type: string
        formattedName:
          description: >-
            A fully formatted name in one string with all of its pieces in their
            proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean)
          type: string
        location:
          description: >-
            Temporary current location of the individual (may be used if the
            individual has approved its sharing)
          type: string
        status:
          $ref: '#/components/schemas/IndividualStateType'
        otherName:
          description: List of other names by which this individual is known
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
          type: array
        individualIdentification:
          description: >-
            List of official identifications issued to the individual, such as
            passport, driving licence, social security number
          items:
            $ref: '#/components/schemas/IndividualIdentification'
          type: array
        disability:
          description: List of disabilities suffered by the individual
          items:
            $ref: '#/components/schemas/Disability'
          type: array
        languageAbility:
          description: List of national languages known by the individual
          items:
            $ref: '#/components/schemas/LanguageAbility'
          type: array
        skill:
          description: List of skills exhibited by the individual
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        familyName:
          description: >-
            Contains the non-chosen or inherited name. Also known as last name
            in the Western context
          type: string
        givenName:
          description: First name of the individual
          type: string
      type: object
    IndividualIdentification_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an individual (passport, national identity card, drivers license, social
        security number, birth certificate)
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: >-
            Authority which has issued the identifier, such as: social security,
            town hall
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Identification type (passport, national identity card, drivers
            license, social security number, birth certificate)
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue'
      type: object
    IndividualIdentification_FVO_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an individual (passport, national identity card, drivers license, social
        security number, birth certificate)
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: >-
            Authority which has issued the identifier, such as: social security,
            town hall
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Identification type (passport, national identity card, drivers
            license, social security number, birth certificate)
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      type: object
    IndividualIdentification_MVO_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an individual (passport, national identity card, drivers license, social
        security number, birth certificate)
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: >-
            Authority which has issued the identifier, such as: social security,
            town hall
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Identification type (passport, national identity card, drivers
            license, social security number, birth certificate)
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      type: object
    Individual_FVO_allOf:
      description: >-
        Individual represents a single human being (a man, woman or child). The
        individual can be a customer, an employee or any other person that the
        organization needs to store information about.
      properties:
        gender:
          description: Gender
          type: string
        placeOfBirth:
          description: Reference to the place where the individual was born
          type: string
        countryOfBirth:
          description: Country where the individual was born
          type: string
        nationality:
          description: Nationality
          type: string
        maritalStatus:
          description: 'Marital status (married, divorced, widow ...)'
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        deathDate:
          description: Date of death
          format: date-time
          type: string
        title:
          description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
          type: string
        aristocraticTitle:
          description: 'e.g. Baron, Graf, Earl'
          type: string
        generation:
          description: 'e.g.. Sr, Jr, III (the third)'
          type: string
        preferredGivenName:
          description: >-
            Contains the chosen name by which the individual prefers to be
            addressed. Note: This name may be a name other than a given name,
            such as a nickname
          type: string
        familyNamePrefix:
          description: Family name prefix
          type: string
        legalName:
          description: Legal name or birth name (name one has for official purposes)
          type: string
        middleName:
          description: Middles name or initial
          type: string
        name:
          description: >-
            Full name flatten (first, middle, and last names) - this is the name
            that is expected to be presented in reference data types such as
            PartyRef, RelatedParty, etc. that refer to Individual
          type: string
        formattedName:
          description: >-
            A fully formatted name in one string with all of its pieces in their
            proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean)
          type: string
        location:
          description: >-
            Temporary current location of the individual (may be used if the
            individual has approved its sharing)
          type: string
        status:
          $ref: '#/components/schemas/IndividualStateType'
        otherName:
          description: List of other names by which this individual is known
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
          type: array
        individualIdentification:
          description: >-
            List of official identifications issued to the individual, such as
            passport, driving licence, social security number
          items:
            $ref: '#/components/schemas/IndividualIdentification_FVO'
          type: array
        disability:
          description: List of disabilities suffered by the individual
          items:
            $ref: '#/components/schemas/Disability'
          type: array
        languageAbility:
          description: List of national languages known by the individual
          items:
            $ref: '#/components/schemas/LanguageAbility'
          type: array
        skill:
          description: List of skills exhibited by the individual
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        familyName:
          description: >-
            Contains the non-chosen or inherited name. Also known as last name
            in the Western context
          type: string
        givenName:
          description: First name of the individual
          type: string
      type: object
    Individual_MVO_allOf:
      description: >-
        Individual represents a single human being (a man, woman or child). The
        individual can be a customer, an employee or any other person that the
        organization needs to store information about.
      properties:
        gender:
          description: Gender
          type: string
        placeOfBirth:
          description: Reference to the place where the individual was born
          type: string
        countryOfBirth:
          description: Country where the individual was born
          type: string
        nationality:
          description: Nationality
          type: string
        maritalStatus:
          description: 'Marital status (married, divorced, widow ...)'
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        deathDate:
          description: Date of death
          format: date-time
          type: string
        title:
          description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
          type: string
        aristocraticTitle:
          description: 'e.g. Baron, Graf, Earl'
          type: string
        generation:
          description: 'e.g.. Sr, Jr, III (the third)'
          type: string
        preferredGivenName:
          description: >-
            Contains the chosen name by which the individual prefers to be
            addressed. Note: This name may be a name other than a given name,
            such as a nickname
          type: string
        familyNamePrefix:
          description: Family name prefix
          type: string
        legalName:
          description: Legal name or birth name (name one has for official purposes)
          type: string
        middleName:
          description: Middles name or initial
          type: string
        name:
          description: >-
            Full name flatten (first, middle, and last names) - this is the name
            that is expected to be presented in reference data types such as
            PartyRef, RelatedParty, etc. that refer to Individual
          type: string
        formattedName:
          description: >-
            A fully formatted name in one string with all of its pieces in their
            proper place and all of the necessary punctuation. Useful for
            specific contexts (Chinese, Japanese, Korean)
          type: string
        location:
          description: >-
            Temporary current location of the individual (may be used if the
            individual has approved its sharing)
          type: string
        status:
          $ref: '#/components/schemas/IndividualStateType'
        otherName:
          description: List of other names by which this individual is known
          items:
            $ref: '#/components/schemas/OtherNameIndividual'
          type: array
        individualIdentification:
          description: >-
            List of official identifications issued to the individual, such as
            passport, driving licence, social security number
          items:
            $ref: '#/components/schemas/IndividualIdentification_MVO'
          type: array
        disability:
          description: List of disabilities suffered by the individual
          items:
            $ref: '#/components/schemas/Disability'
          type: array
        languageAbility:
          description: List of national languages known by the individual
          items:
            $ref: '#/components/schemas/LanguageAbility'
          type: array
        skill:
          description: List of skills exhibited by the individual
          items:
            $ref: '#/components/schemas/Skill'
          type: array
        familyName:
          description: >-
            Contains the non-chosen or inherited name. Also known as last name
            in the Western context
          type: string
        givenName:
          description: First name of the individual
          type: string
      type: object
    IntegerArrayCharacteristic_allOf:
      description: A characteristic which value is an array of Integer(s).
      properties:
        value:
          items:
            type: integer
          type: array
      type: object
    IntegerArrayCharacteristic_FVO_allOf:
      description: A characteristic which value is an array of Integer(s).
      properties:
        value:
          items:
            type: integer
          type: array
      required:
        - value
      type: object
    IntegerCharacteristic_allOf:
      description: A characteristic which value is a Integer.
      properties:
        value:
          description: Value of the characteristic
          type: integer
      type: object
    IntegerCharacteristic_FVO_allOf:
      description: A characteristic which value is a Integer.
      properties:
        value:
          description: Value of the characteristic
          type: integer
      required:
        - value
      type: object
    Intent_allOf:
      description: >-
        An Intent instance is the formal description of all expectations
        including requirements, goals, and constraints given to a technical
        system
      properties:
        description:
          description: The description of the intent.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        isBundle:
          description: >-
            isBundle determines whether an intent represents a single intent
            (false), or a bundle of intents(true).
          type: boolean
        priority:
          description: >-
            Can be used by intent owner to prioritize intents in an intent
            management system
          type: string
        statusChangeDate:
          description: >-
            A date time( DateTime). The date that the entity status changed to
            the current one
          format: date-time
          type: string
        context:
          description: A string used to give a context to the intent
          type: string
        version:
          description: >-
            A field that identifies the specific version of an instance of an
            intent.
          type: string
        intentSpecification:
          $ref: '#/components/schemas/EntityRef'
        intentRelationship:
          description: A list of intents related to this intent
          items:
            $ref: '#/components/schemas/EntityRelationship'
          type: array
        characteristic:
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
          type: array
        attachment:
          description: >-
            Attachments that may be of relevance to this intent, such as
            picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        name:
          description: The name of the intent.
          type: string
        expression:
          $ref: '#/components/schemas/Expression'
        creationDate:
          description: Date and time of the creation of this REST resource
          format: date-time
          type: string
        lastUpdate:
          description: Date and time of the last update of this REST resource
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status of this intent
          type: string
      type: object
    Intent_FVO_allOf:
      description: >-
        An Intent instance is the formal description of all expectations
        including requirements, goals, and constraints given to a technical
        system
      properties:
        description:
          description: The description of the intent.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        isBundle:
          description: >-
            isBundle determines whether an intent represents a single intent
            (false), or a bundle of intents(true).
          type: boolean
        priority:
          description: >-
            Can be used by intent owner to prioritize intents in an intent
            management system
          type: string
        statusChangeDate:
          description: >-
            A date time( DateTime). The date that the entity status changed to
            the current one
          format: date-time
          type: string
        context:
          description: A string used to give a context to the intent
          type: string
        version:
          description: >-
            A field that identifies the specific version of an instance of an
            intent.
          type: string
        intentSpecification:
          $ref: '#/components/schemas/EntityRef_FVO'
        intentRelationship:
          description: A list of intents related to this intent
          items:
            $ref: '#/components/schemas/EntityRelationship_FVO'
          type: array
        characteristic:
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
          type: array
        attachment:
          description: >-
            Attachments that may be of relevance to this intent, such as
            picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
          type: array
        name:
          description: The name of the intent.
          type: string
        expression:
          $ref: '#/components/schemas/Expression_FVO'
        creationDate:
          description: Date and time of the creation of this REST resource
          format: date-time
          type: string
        lastUpdate:
          description: Date and time of the last update of this REST resource
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status of this intent
          type: string
      required:
        - creationDate
        - lastUpdate
        - lifecycleStatus
        - name
      type: object
    Intent_MVO_allOf:
      description: >-
        An Intent instance is the formal description of all expectations
        including requirements, goals, and constraints given to a technical
        system
      properties:
        description:
          description: The description of the intent.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        isBundle:
          description: >-
            isBundle determines whether an intent represents a single intent
            (false), or a bundle of intents(true).
          type: boolean
        priority:
          description: >-
            Can be used by intent owner to prioritize intents in an intent
            management system
          type: string
        statusChangeDate:
          description: >-
            A date time( DateTime). The date that the entity status changed to
            the current one
          format: date-time
          type: string
        context:
          description: A string used to give a context to the intent
          type: string
        version:
          description: >-
            A field that identifies the specific version of an instance of an
            intent.
          type: string
        intentSpecification:
          $ref: '#/components/schemas/EntityRef'
        intentRelationship:
          description: A list of intents related to this intent
          items:
            $ref: '#/components/schemas/EntityRelationship_MVO'
          type: array
        characteristic:
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
          type: array
        attachment:
          description: >-
            Attachments that may be of relevance to this intent, such as
            picture, document, media
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
          type: array
        name:
          description: The name of the intent.
          type: string
        expression:
          $ref: '#/components/schemas/Expression_MVO'
        creationDate:
          description: Date and time of the creation of this REST resource
          format: date-time
          type: string
        lastUpdate:
          description: Date and time of the last update of this REST resource
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status of this intent
          type: string
      type: object
    Note_allOf:
      description: Extra information about a given entity
      properties:
        id:
          description: Identifier of the note within its containing entity
          example: afa9-3d90aaa8da0f
          type: string
        author:
          description: Author of the note
          example: Mr. N. Bene
          type: string
        date:
          description: Date of the note
          example: 2020-11-20T08:00:00.000Z
          format: date-time
          type: string
        text:
          description: Text of the note
          example: This is important
          type: string
      type: object
    NumberArrayCharacteristic_allOf:
      description: A characteristic which value is an array of Number(s).
      properties:
        value:
          items:
            type: number
          type: array
      type: object
    NumberArrayCharacteristic_FVO_allOf:
      description: A characteristic which value is an array of Number(s).
      properties:
        value:
          items:
            type: number
          type: array
      required:
        - value
      type: object
    NumberCharacteristic_allOf:
      description: A characteristic which value is a Number.
      properties:
        value:
          description: Value of the characteristic
          type: number
      type: object
    NumberCharacteristic_FVO_allOf:
      description: A characteristic which value is a Number.
      properties:
        value:
          description: Value of the characteristic
          type: number
      required:
        - value
      type: object
    ObjectArrayCharacteristic_allOf:
      description: A characteristic which value is an array of Object(s).
      properties:
        value:
          items:
            type: object
          type: array
      type: object
    ObjectArrayCharacteristic_FVO_allOf:
      description: A characteristic which value is an array of Object(s).
      properties:
        value:
          items:
            type: object
          type: array
      required:
        - value
      type: object
    ObjectCharacteristic_allOf:
      description: A characteristic which value is a Object.
      properties:
        value:
          description: Value of the characteristic
          type: object
      type: object
    ObjectCharacteristic_FVO_allOf:
      description: A characteristic which value is a Object.
      properties:
        value:
          description: Value of the characteristic
          type: object
      required:
        - value
      type: object
    Organization_allOf:
      description: >-
        Organization represents a group of people identified by shared interests
        or purpose. Examples include business, department and enterprise.
        Because of the complex nature of many businesses, both organizations and
        organization units are represented by the same data.
      properties:
        isLegalEntity:
          description: >-
            If value is true, the organization is a legal entity known by a
            national referential.
          type: boolean
        isHeadOffice:
          description: 'If value is true, the organization is the head office'
          type: boolean
        organizationType:
          description: 'Type of Organization (company, department...)'
          type: string
        existsDuring:
          $ref: '#/components/schemas/TimePeriod'
        name:
          description: Organization name (department name for example)
          type: string
        nameType:
          description: 'Type of the name : Co, Inc, Ltd, etc.'
          type: string
        status:
          $ref: '#/components/schemas/OrganizationStateType'
        otherName:
          description: List of additional names by which the organization is known
          items:
            $ref: '#/components/schemas/OtherNameOrganization'
          type: array
        organizationIdentification:
          description: >-
            List of official identifiers given to the organization, for example
            company number in the registry of companies
          items:
            $ref: '#/components/schemas/OrganizationIdentification'
          type: array
        organizationChildRelationship:
          description: >-
            List of organizations that are contained within this organization.
            For example if this organization is the Legal Department, the child
            organizations might include Claims, Courts, Contracts
          items:
            $ref: '#/components/schemas/OrganizationChildRelationship'
          type: array
        organizationParentRelationship:
          $ref: '#/components/schemas/OrganizationParentRelationship'
        tradingName:
          description: Name that the organization (unit) trades under
          type: string
      type: object
    OrganizationChildRelationship_allOf:
      description: Child references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef'
      type: object
    OrganizationChildRelationship_FVO_allOf:
      description: Child references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef_FVO'
      type: object
    OrganizationChildRelationship_MVO_allOf:
      description: Child references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef_MVO'
      type: object
    OrganizationIdentification_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an organization
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: Authority which has issued the identifier (chamber of commerce...)
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Type of identification information used to identify the company in a
            country or internationally
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue'
      type: object
    OrganizationIdentification_FVO_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an organization
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: Authority which has issued the identifier (chamber of commerce...)
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Type of identification information used to identify the company in a
            country or internationally
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      type: object
    OrganizationIdentification_MVO_allOf:
      description: >-
        Represents our registration of information used as proof of identity by
        an organization
      properties:
        identificationId:
          description: Identifier
          type: string
        issuingAuthority:
          description: Authority which has issued the identifier (chamber of commerce...)
          type: string
        issuingDate:
          description: Date at which the identifier was issued
          format: date-time
          type: string
        identificationType:
          description: >-
            Type of identification information used to identify the company in a
            country or internationally
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      type: object
    OrganizationParentRelationship_allOf:
      description: Parent references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef'
      type: object
    OrganizationParentRelationship_FVO_allOf:
      description: Parent references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef_FVO'
      type: object
    OrganizationParentRelationship_MVO_allOf:
      description: Parent references of an organization in a structure of organizations.
      properties:
        relationshipType:
          description: >-
            Type of the relationship. Could be juridical, hierarchical,
            geographical, functional for example.
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationRef_MVO'
      type: object
    Organization_FVO_allOf:
      description: >-
        Organization represents a group of people identified by shared interests
        or purpose. Examples include business, department and enterprise.
        Because of the complex nature of many businesses, both organizations and
        organization units are represented by the same data.
      properties:
        isLegalEntity:
          description: >-
            If value is true, the organization is a legal entity known by a
            national referential.
          type: boolean
        isHeadOffice:
          description: 'If value is true, the organization is the head office'
          type: boolean
        organizationType:
          description: 'Type of Organization (company, department...)'
          type: string
        existsDuring:
          $ref: '#/components/schemas/TimePeriod'
        name:
          description: Organization name (department name for example)
          type: string
        nameType:
          description: 'Type of the name : Co, Inc, Ltd, etc.'
          type: string
        status:
          $ref: '#/components/schemas/OrganizationStateType'
        otherName:
          description: List of additional names by which the organization is known
          items:
            $ref: '#/components/schemas/OtherNameOrganization_FVO'
          type: array
        organizationIdentification:
          description: >-
            List of official identifiers given to the organization, for example
            company number in the registry of companies
          items:
            $ref: '#/components/schemas/OrganizationIdentification_FVO'
          type: array
        organizationChildRelationship:
          description: >-
            List of organizations that are contained within this organization.
            For example if this organization is the Legal Department, the child
            organizations might include Claims, Courts, Contracts
          items:
            $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
          type: array
        organizationParentRelationship:
          $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
        tradingName:
          description: Name that the organization (unit) trades under
          type: string
      type: object
    Organization_MVO_allOf:
      description: >-
        Organization represents a group of people identified by shared interests
        or purpose. Examples include business, department and enterprise.
        Because of the complex nature of many businesses, both organizations and
        organization units are represented by the same data.
      properties:
        isLegalEntity:
          description: >-
            If value is true, the organization is a legal entity known by a
            national referential.
          type: boolean
        isHeadOffice:
          description: 'If value is true, the organization is the head office'
          type: boolean
        organizationType:
          description: 'Type of Organization (company, department...)'
          type: string
        existsDuring:
          $ref: '#/components/schemas/TimePeriod'
        name:
          description: Organization name (department name for example)
          type: string
        nameType:
          description: 'Type of the name : Co, Inc, Ltd, etc.'
          type: string
        status:
          $ref: '#/components/schemas/OrganizationStateType'
        otherName:
          description: List of additional names by which the organization is known
          items:
            $ref: '#/components/schemas/OtherNameOrganization_MVO'
          type: array
        organizationIdentification:
          description: >-
            List of official identifiers given to the organization, for example
            company number in the registry of companies
          items:
            $ref: '#/components/schemas/OrganizationIdentification_MVO'
          type: array
        organizationChildRelationship:
          description: >-
            List of organizations that are contained within this organization.
            For example if this organization is the Legal Department, the child
            organizations might include Claims, Courts, Contracts
          items:
            $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
          type: array
        organizationParentRelationship:
          $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
        tradingName:
          description: Name that the organization (unit) trades under
          type: string
      type: object
    OtherNameOrganization_allOf:
      description: 'Keeps track of other names, for example the old name of an organization.'
      properties:
        tradingName:
          description: The name that the organization trades under
          type: string
        nameType:
          description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
          type: string
        name:
          description: Organization name (department name for example)
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    Party_allOf:
      description: >-
        Generic and Abstract Party structure used to define commonalities
        between sub concepts of Individual and Organization.
      properties:
        externalReference:
          description: >-
            List of identifiers of the Party in an external system, for example
            when party information is imported from a commerce system
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
          type: array
        partyCharacteristic:
          description: List of additional characteristics that a Party can take on.
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        taxExemptionCertificate:
          description: >-
            List of tax exemptions granted to the party. For example, a war
            veteran might have partial exemption from state tax and a full
            exemption from federal tax
          items:
            $ref: '#/components/schemas/TaxExemptionCertificate'
          type: array
        creditRating:
          description: >-
            List of credit profiles and scores for the party, typically received
            from an external credit broker
          items:
            $ref: '#/components/schemas/PartyCreditProfile'
          type: array
        relatedParty:
          description: List of parties and/or party roles related to this party
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole'
          type: array
        contactMedium:
          description: >-
            List of means for contacting the party, e.g. mobile phone, email
            address
          items:
            $ref: '#/components/schemas/ContactMedium'
          type: array
      type: object
    PartyCreditProfile_allOf:
      description: >-
        An individual might be evaluated for its worthiness and this evaluation
        might be based on a credit rating given by a credit agency.
      properties:
        creditAgencyName:
          description: Name of the credit agency giving the score
          type: string
        creditAgencyType:
          description: Type of the credit agency giving the score
          type: string
        ratingReference:
          description: Reference corresponding to the credit rating
          type: string
        ratingScore:
          description: >-
            A measure of a party's creditworthiness calculated on the basis of a
            combination of factors such as their income and credit history
          format: int32
          type: integer
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    PartyRole_allOf:
      description: The part played by a party in a given context.
      properties:
        name:
          description: >-
            A word, term, or phrase by which the PartyRole is known and
            distinguished from other PartyRoles. It's the name of the PartyRole
            unique entity.
          type: string
        description:
          description: A description of the PartyRole.
          type: string
        role:
          description: >-
            Role played by the engagedParty in this context. As role is defined
            by partyRoleSpecification, this role attribute can be used to
            precise the role defined by partyRoleSpecification, or it can be
            used to define the role in case there is no partyRoleSpecification.
          type: string
        engagedParty:
          $ref: '#/components/schemas/PartyRef'
        partyRoleSpecification:
          $ref: '#/components/schemas/PartyRoleSpecificationRef'
        characteristic:
          description: Describes the characteristic of a party role.
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        account:
          items:
            $ref: '#/components/schemas/AccountRef'
          type: array
        agreement:
          items:
            $ref: '#/components/schemas/AgreementRef'
          type: array
        contactMedium:
          items:
            $ref: '#/components/schemas/ContactMedium'
          type: array
        paymentMethod:
          items:
            $ref: '#/components/schemas/PaymentMethodRef'
          type: array
        creditProfile:
          items:
            $ref: '#/components/schemas/CreditProfile'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole'
          type: array
        status:
          description: Used to track the lifecycle status of the party role.
          type: string
        statusReason:
          description: >-
            A string providing an explanation on the value of the status
            lifecycle. For instance if the status is Rejected, statusReason will
            provide the reason for rejection.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    PartyRoleRef_allOf:
      description: >-
        Party role reference. A party role represents the part played by a party
        in a given context.
      properties:
        partyId:
          description: >-
            The identifier of the engaged party that is linked to the PartyRole
            object.
          type: string
        partyName:
          description: >-
            The name of the engaged party that is linked to the PartyRole
            object.
          type: string
      type: object
    PartyRole_FVO_allOf:
      description: The part played by a party in a given context.
      properties:
        name:
          description: >-
            A word, term, or phrase by which the PartyRole is known and
            distinguished from other PartyRoles. It's the name of the PartyRole
            unique entity.
          type: string
        description:
          description: A description of the PartyRole.
          type: string
        role:
          description: >-
            Role played by the engagedParty in this context. As role is defined
            by partyRoleSpecification, this role attribute can be used to
            precise the role defined by partyRoleSpecification, or it can be
            used to define the role in case there is no partyRoleSpecification.
          type: string
        engagedParty:
          $ref: '#/components/schemas/PartyRef_FVO'
        partyRoleSpecification:
          $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
        characteristic:
          description: Describes the characteristic of a party role.
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        account:
          items:
            $ref: '#/components/schemas/AccountRef_FVO'
          type: array
        agreement:
          items:
            $ref: '#/components/schemas/AgreementRef_FVO'
          type: array
        contactMedium:
          items:
            $ref: '#/components/schemas/ContactMedium_FVO'
          type: array
        paymentMethod:
          items:
            $ref: '#/components/schemas/PaymentMethodRef_FVO'
          type: array
        creditProfile:
          items:
            $ref: '#/components/schemas/CreditProfile_FVO'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
          type: array
        status:
          description: Used to track the lifecycle status of the party role.
          type: string
        statusReason:
          description: >-
            A string providing an explanation on the value of the status
            lifecycle. For instance if the status is Rejected, statusReason will
            provide the reason for rejection.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      required:
        - engagedParty
        - name
      type: object
    PartyRole_MVO_allOf:
      description: The part played by a party in a given context.
      properties:
        name:
          description: >-
            A word, term, or phrase by which the PartyRole is known and
            distinguished from other PartyRoles. It's the name of the PartyRole
            unique entity.
          type: string
        description:
          description: A description of the PartyRole.
          type: string
        role:
          description: >-
            Role played by the engagedParty in this context. As role is defined
            by partyRoleSpecification, this role attribute can be used to
            precise the role defined by partyRoleSpecification, or it can be
            used to define the role in case there is no partyRoleSpecification.
          type: string
        engagedParty:
          $ref: '#/components/schemas/PartyRef_MVO'
        partyRoleSpecification:
          $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
        characteristic:
          description: Describes the characteristic of a party role.
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        account:
          items:
            $ref: '#/components/schemas/AccountRef_MVO'
          type: array
        agreement:
          items:
            $ref: '#/components/schemas/AgreementRef_MVO'
          type: array
        contactMedium:
          items:
            $ref: '#/components/schemas/ContactMedium_MVO'
          type: array
        paymentMethod:
          items:
            $ref: '#/components/schemas/PaymentMethodRef_MVO'
          type: array
        creditProfile:
          items:
            $ref: '#/components/schemas/CreditProfile_MVO'
          type: array
        relatedParty:
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
          type: array
        status:
          description: Used to track the lifecycle status of the party role.
          type: string
        statusReason:
          description: >-
            A string providing an explanation on the value of the status
            lifecycle. For instance if the status is Rejected, statusReason will
            provide the reason for rejection.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
      type: object
    Party_FVO_allOf:
      description: >-
        Generic and Abstract Party structure used to define commonalities
        between sub concepts of Individual and Organization.
      properties:
        externalReference:
          description: >-
            List of identifiers of the Party in an external system, for example
            when party information is imported from a commerce system
          items:
            $ref: '#/components/schemas/ExternalIdentifier_FVO'
          type: array
        partyCharacteristic:
          description: List of additional characteristics that a Party can take on.
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        taxExemptionCertificate:
          description: >-
            List of tax exemptions granted to the party. For example, a war
            veteran might have partial exemption from state tax and a full
            exemption from federal tax
          items:
            $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
          type: array
        creditRating:
          description: >-
            List of credit profiles and scores for the party, typically received
            from an external credit broker
          items:
            $ref: '#/components/schemas/PartyCreditProfile_FVO'
          type: array
        relatedParty:
          description: List of parties and/or party roles related to this party
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
          type: array
        contactMedium:
          description: >-
            List of means for contacting the party, e.g. mobile phone, email
            address
          items:
            $ref: '#/components/schemas/ContactMedium_FVO'
          type: array
      type: object
    Party_MVO_allOf:
      description: >-
        Generic and Abstract Party structure used to define commonalities
        between sub concepts of Individual and Organization.
      properties:
        externalReference:
          description: >-
            List of identifiers of the Party in an external system, for example
            when party information is imported from a commerce system
          items:
            $ref: '#/components/schemas/ExternalIdentifier_MVO'
          type: array
        partyCharacteristic:
          description: List of additional characteristics that a Party can take on.
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        taxExemptionCertificate:
          description: >-
            List of tax exemptions granted to the party. For example, a war
            veteran might have partial exemption from state tax and a full
            exemption from federal tax
          items:
            $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
          type: array
        creditRating:
          description: >-
            List of credit profiles and scores for the party, typically received
            from an external credit broker
          items:
            $ref: '#/components/schemas/PartyCreditProfile_MVO'
          type: array
        relatedParty:
          description: List of parties and/or party roles related to this party
          items:
            $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
          type: array
        contactMedium:
          description: >-
            List of means for contacting the party, e.g. mobile phone, email
            address
          items:
            $ref: '#/components/schemas/ContactMedium_MVO'
          type: array
      type: object
    RelatedEntityRefOrValue_allOf:
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance. A related entity defines a entity described by reference or by
        value linked to a specific entity. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Entity and not the
        RelatedEntityRefOrValue class itself
      properties:
        role:
          type: string
        entity:
          $ref: '#/components/schemas/EntityRefOrValue'
      type: object
    RelatedEntityRefOrValue_FVO_allOf:
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance. A related entity defines a entity described by reference or by
        value linked to a specific entity. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Entity and not the
        RelatedEntityRefOrValue class itself
      properties:
        role:
          type: string
        entity:
          $ref: '#/components/schemas/EntityRefOrValue_FVO'
      required:
        - entity
        - role
      type: object
    RelatedEntityRefOrValue_MVO_allOf:
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance. A related entity defines a entity described by reference or by
        value linked to a specific entity. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Entity and not the
        RelatedEntityRefOrValue class itself
      properties:
        role:
          type: string
        entity:
          $ref: '#/components/schemas/EntityRefOrValue_MVO'
      type: object
    RelatedPartyOrPartyRole_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyOrPartyRole'
      type: object
    RelatedPartyOrPartyRole_FVO_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyOrPartyRole_FVO'
      required:
        - role
      type: object
    RelatedPartyOrPartyRole_MVO_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyOrPartyRole_MVO'
      type: object
    RelatedPartyRefOrPartyRoleRef_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      type: object
    RelatedPartyRefOrPartyRoleRef_FVO_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyRefOrPartyRoleRef_FVO'
      required:
        - role
      type: object
    RelatedPartyRefOrPartyRoleRef_MVO_allOf:
      description: >-
        RelatedParty reference. A related party defines party or party role or
        its reference, linked to a specific entity
      properties:
        role:
          description: >-
            Role played by the related party or party role in the context of the
            specific entity it is linked to. Such as 'initiator', 'customer', 
            'salesAgent', 'user'
          type: string
        partyOrPartyRole:
          $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      type: object
    RelatedPlaceRefOrValue_allOf:
      description: >-
        Entity reference. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the RelatedPlace entity and not the
        RelatedPlaceRefOrValue class itself
      properties:
        role:
          type: string
        place:
          $ref: '#/components/schemas/PlaceRefOrValue'
      type: object
    RelatedPlaceRefOrValue_FVO_allOf:
      description: >-
        Entity reference. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the RelatedPlace entity and not the
        RelatedPlaceRefOrValue class itself
      properties:
        role:
          type: string
        place:
          $ref: '#/components/schemas/PlaceRefOrValue_FVO'
      required:
        - place
        - role
      type: object
    RelatedPlaceRefOrValue_MVO_allOf:
      description: >-
        Entity reference. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the RelatedPlace entity and not the
        RelatedPlaceRefOrValue class itself
      properties:
        role:
          type: string
        place:
          $ref: '#/components/schemas/PlaceRefOrValue_MVO'
      type: object
    RelatedServiceOrderItem_allOf:
      description: >-
        RelatedServiceOrderItem (a ServiceOrder item) .The service order item
        which triggered service creation/change/termination.
      properties:
        '@referredType':
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
          type: string
        serviceOrderHref:
          description: Reference of the related entity.
          type: string
        serviceOrderId:
          description: Unique identifier of a related entity.
          type: string
        itemAction:
          $ref: '#/components/schemas/OrderItemActionType'
        itemId:
          description: Identifier of the order item where the service was managed
          type: string
        role:
          description: role of the service order item for this service
          type: string
      type: object
    Service_allOf:
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.
      properties:
        description:
          description: Free-text description of the service
          type: string
        isServiceEnabled:
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
          type: boolean
        hasStarted:
          description: 'If TRUE, this Service has already been started'
          type: boolean
        startMode:
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
          type: string
        isStateful:
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
          type: boolean
        startDate:
          description: Date when the service starts
          format: date-time
          type: string
        endDate:
          description: Date when the service ends
          format: date-time
          type: string
        serviceOrderItem:
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          type: array
        note:
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note'
          type: array
        serviceType:
          description: Business type of the service
          type: string
        isBundle:
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
          type: boolean
        name:
          description: Name of the service
          type: string
        category:
          description: Is it a customer facing or resource facing service
          type: string
        feature:
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        relatedEntity:
          description: A list of related entities in relationship with this service
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          type: array
        externalIdentifier:
          description: A list of external identifiers assoicated with this service
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
          type: array
        serviceCharacteristic:
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        serviceRelationship:
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          type: array
        supportingService:
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          type: array
        supportingResource:
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
          items:
            $ref: '#/components/schemas/ResourceRef'
          type: array
        relatedParty:
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
          type: array
        place:
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          type: array
        state:
          $ref: '#/components/schemas/ServiceStateType'
        operatingStatus:
          $ref: '#/components/schemas/ServiceOperatingStatusType'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        serviceDate:
          description: Date when the service was created (whatever its status).
          type: string
        intent:
          $ref: '#/components/schemas/IntentRefOrValue'
      type: object
    ServiceAttributeValueChangeEvent_allOf:
      description: ServiceAttributeValueChangeEvent generic structure
      properties:
        event:
          $ref: '#/components/schemas/ServiceAttributeValueChangeEventPayload'
      type: object
    ServiceCreateEvent_allOf:
      description: ServiceCreateEvent generic structure
      properties:
        event:
          $ref: '#/components/schemas/ServiceCreateEventPayload'
      type: object
    ServiceDeleteEvent_allOf:
      description: ServiceDeleteEvent generic structure
      properties:
        event:
          $ref: '#/components/schemas/ServiceDeleteEventPayload'
      type: object
    ServiceOperatingStatusChangeEvent_allOf:
      description: ServiceOperatingStatusChangeEvent generic structure
      properties:
        event:
          $ref: '#/components/schemas/ServiceOperatingStatusChangeEventPayload'
      type: object
    ServiceRelationship_allOf:
      properties:
        serviceRelationshipCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic'
          type: array
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
        relationshipType:
          type: string
      type: object
    ServiceRelationship_FVO_allOf:
      properties:
        serviceRelationshipCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        service:
          $ref: '#/components/schemas/ServiceRefOrValue_FVO'
        relationshipType:
          type: string
      required:
        - relationshipType
      type: object
    ServiceRelationship_MVO_allOf:
      properties:
        serviceRelationshipCharacteristic:
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        service:
          $ref: '#/components/schemas/ServiceRefOrValue_MVO'
        relationshipType:
          type: string
      required:
        - relationshipType
      type: object
    ServiceSpecificationRef_allOf:
      description: >-
        Service specification reference: ServiceSpecification(s) required to
        realize a ProductSpecification.
      properties:
        version:
          description: Service specification version
          type: string
      type: object
    ServiceStateChangeEvent_allOf:
      description: ServiceStateChangeEvent generic structure
      properties:
        event:
          $ref: '#/components/schemas/ServiceStateChangeEventPayload'
      type: object
    Service_FVO_allOf:
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.
      properties:
        description:
          description: Free-text description of the service
          type: string
        isServiceEnabled:
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
          type: boolean
        hasStarted:
          description: 'If TRUE, this Service has already been started'
          type: boolean
        startMode:
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
          type: string
        isStateful:
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
          type: boolean
        startDate:
          description: Date when the service starts
          format: date-time
          type: string
        endDate:
          description: Date when the service ends
          format: date-time
          type: string
        serviceOrderItem:
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem_FVO'
          type: array
        note:
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note_FVO'
          type: array
        serviceType:
          description: Business type of the service
          type: string
        isBundle:
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
          type: boolean
        name:
          description: Name of the service
          type: string
        category:
          description: Is it a customer facing or resource facing service
          type: string
        feature:
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature_FVO'
          type: array
        relatedEntity:
          description: A list of related entities in relationship with this service
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue_FVO'
          type: array
        externalIdentifier:
          description: A list of external identifiers assoicated with this service
          items:
            $ref: '#/components/schemas/ExternalIdentifier_FVO'
          type: array
        serviceCharacteristic:
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
          items:
            $ref: '#/components/schemas/Characteristic_FVO'
          type: array
        serviceRelationship:
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
          items:
            $ref: '#/components/schemas/ServiceRelationship_FVO'
          type: array
        supportingService:
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue_FVO'
          type: array
        supportingResource:
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
          items:
            $ref: '#/components/schemas/ResourceRef_FVO'
          type: array
        relatedParty:
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
          type: array
        place:
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue_FVO'
          type: array
        state:
          $ref: '#/components/schemas/ServiceStateType'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef_FVO'
        intent:
          $ref: '#/components/schemas/IntentRefOrValue_FVO'
      required:
        - serviceSpecification
        - state
      type: object
    Service_MVO_allOf:
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.
      properties:
        description:
          description: Free-text description of the service
          type: string
        isServiceEnabled:
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
          type: boolean
        hasStarted:
          description: 'If TRUE, this Service has already been started'
          type: boolean
        startMode:
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
          type: string
        isStateful:
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
          type: boolean
        startDate:
          description: Date when the service starts
          format: date-time
          type: string
        endDate:
          description: Date when the service ends
          format: date-time
          type: string
        serviceOrderItem:
          description: A list of service order items related to this service
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem_MVO'
          type: array
        note:
          description: A list of notes made on this service
          items:
            $ref: '#/components/schemas/Note_MVO'
          type: array
        serviceType:
          description: Business type of the service
          type: string
        isBundle:
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
          type: boolean
        name:
          description: Name of the service
          type: string
        category:
          description: Is it a customer facing or resource facing service
          type: string
        feature:
          description: 'A list of feature associated with this service '
          items:
            $ref: '#/components/schemas/Feature_MVO'
          type: array
        relatedEntity:
          description: A list of related entities in relationship with this service
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue_MVO'
          type: array
        externalIdentifier:
          description: A list of external identifiers assoicated with this service
          items:
            $ref: '#/components/schemas/ExternalIdentifier_MVO'
          type: array
        serviceCharacteristic:
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
          items:
            $ref: '#/components/schemas/Characteristic_MVO'
          type: array
        serviceRelationship:
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
          items:
            $ref: '#/components/schemas/ServiceRelationship_MVO'
          type: array
        supportingService:
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
          items:
            $ref: '#/components/schemas/ServiceRefOrValue_MVO'
          type: array
        supportingResource:
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
          items:
            $ref: '#/components/schemas/ResourceRef_MVO'
          type: array
        relatedParty:
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
          items:
            $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
          type: array
        place:
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue_MVO'
          type: array
        state:
          $ref: '#/components/schemas/ServiceStateType'
        operatingStatus:
          $ref: '#/components/schemas/ServiceOperatingStatusType'
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef_MVO'
        intent:
          $ref: '#/components/schemas/IntentRefOrValue_MVO'
      type: object
    StandardIdentifier_allOf:
      description: >-
        The corresponding identification of the resource in different standard,
        regulatory definitions. The standard specification identifier (e.g., ISO
        3166-1 Alpha-2) and the corresponding value (e.g., BE) relevant to a
        particular resource. It is anticipated that multiple standards can
        provide definitions for a single entity, e.g., a country identifier can
        be specified in various standards (e.g., "ISO 3166-1 Alpha 2",  "ISO
        3166-1 Alpha 3", "ISO 3166-1 Numeric")
      properties:
        format:
          description: 'Standard/Regulatory definition identifier. e.g., ISO 3166-1'
          example: ISO 3166-1
          type: string
        value:
          description: >-
            The value of the resource in the corresponding standard.e.g., a
            country code value
          example: GB
          type: string
      type: object
    StringArrayCharacteristic_allOf:
      description: A characteristic which value is an array of String(s).
      properties:
        value:
          items:
            type: string
          type: array
      type: object
    StringArrayCharacteristic_FVO_allOf:
      description: A characteristic which value is an array of String(s).
      properties:
        value:
          items:
            type: string
          type: array
      required:
        - value
      type: object
    StringCharacteristic_allOf:
      description: A characteristic which value is a String.
      properties:
        value:
          description: Value of the characteristic
          type: string
      type: object
    StringCharacteristic_FVO_allOf:
      description: A characteristic which value is a String.
      properties:
        value:
          description: Value of the characteristic
          type: string
      required:
        - value
      type: object
    TaxDefinition_allOf:
      description: >-
        Reference of a tax definition. A tax is levied by an authorized tax
        jurisdiction. For example, there are many different types of tax
        (Federal Tax levied by the US Government, State Tax levied by the State
        of California, City Tax levied by the City of Los Angeles, etc.).
      properties:
        id:
          description: Unique identifier of the tax.
          type: string
        name:
          description: Tax name.
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        jurisdictionName:
          description: Name of the jurisdiction that levies the tax
          example: USA
          type: string
        jurisdictionLevel:
          description: Level of the jurisdiction that levies the tax
          example: Country
          type: string
        taxType:
          description: Type of the tax.
          example: VAT
          type: string
      type: object
    TaxExemptionCertificate_allOf:
      description: >-
        A tax exemption certificate represents a tax exemption granted to a
        party (individual or organization) by a tax jurisdiction which may be a
        city, state, country,... An exemption has a certificate identifier
        (received from the jurisdiction that levied the tax) and a validity
        period. An exemption is per tax types and determines for each type of
        tax what portion of the tax is exempted (partial by percentage or
        complete) via the tax definition.
      properties:
        id:
          description: Identifier of the tax exemption within list of the exemptions
          type: string
        taxDefinition:
          description: >-
            A list of taxes that are covered by the exemption, e.g. City Tax,
            State Tax. The definition would include the exemption (e.g. for a
            rate exemption 0% would be a full exemption, 5% could be a partial
            exemption if the actual rate was 10%).
          items:
            $ref: '#/components/schemas/TaxDefinition'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        certificateNumber:
          description: >-
            Identifier of a document that shows proof of exemption from taxes
            for the taxing jurisdiction
          type: string
        issuingJurisdiction:
          description: Name of the jurisdiction that issued the exemption
          example: USA
          type: string
        reason:
          description: Reason for the tax exemption
          type: string
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue'
      type: object
    TaxExemptionCertificate_FVO_allOf:
      description: >-
        A tax exemption certificate represents a tax exemption granted to a
        party (individual or organization) by a tax jurisdiction which may be a
        city, state, country,... An exemption has a certificate identifier
        (received from the jurisdiction that levied the tax) and a validity
        period. An exemption is per tax types and determines for each type of
        tax what portion of the tax is exempted (partial by percentage or
        complete) via the tax definition.
      properties:
        id:
          description: Identifier of the tax exemption within list of the exemptions
          type: string
        taxDefinition:
          description: >-
            A list of taxes that are covered by the exemption, e.g. City Tax,
            State Tax. The definition would include the exemption (e.g. for a
            rate exemption 0% would be a full exemption, 5% could be a partial
            exemption if the actual rate was 10%).
          items:
            $ref: '#/components/schemas/TaxDefinition_FVO'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        certificateNumber:
          description: >-
            Identifier of a document that shows proof of exemption from taxes
            for the taxing jurisdiction
          type: string
        issuingJurisdiction:
          description: Name of the jurisdiction that issued the exemption
          example: USA
          type: string
        reason:
          description: Reason for the tax exemption
          type: string
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      type: object
    TaxExemptionCertificate_MVO_allOf:
      description: >-
        A tax exemption certificate represents a tax exemption granted to a
        party (individual or organization) by a tax jurisdiction which may be a
        city, state, country,... An exemption has a certificate identifier
        (received from the jurisdiction that levied the tax) and a validity
        period. An exemption is per tax types and determines for each type of
        tax what portion of the tax is exempted (partial by percentage or
        complete) via the tax definition.
      properties:
        id:
          description: Identifier of the tax exemption within list of the exemptions
          type: string
        taxDefinition:
          description: >-
            A list of taxes that are covered by the exemption, e.g. City Tax,
            State Tax. The definition would include the exemption (e.g. for a
            rate exemption 0% would be a full exemption, 5% could be a partial
            exemption if the actual rate was 10%).
          items:
            $ref: '#/components/schemas/TaxDefinition_MVO'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        certificateNumber:
          description: >-
            Identifier of a document that shows proof of exemption from taxes
            for the taxing jurisdiction
          type: string
        issuingJurisdiction:
          description: Name of the jurisdiction that issued the exemption
          example: USA
          type: string
        reason:
          description: Reason for the tax exemption
          type: string
        attachment:
          $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      type: object
    Error_allOf:
      properties:
        code:
          description: 'Application relevant detail, defined in the API or a common list.'
          type: string
        reason:
          description: >-
            Explanation of the reason for the error which can be shown to a
            client user.
          type: string
        message:
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
          type: string
        status:
          description: HTTP Error code extension
          type: string
        referenceError:
          description: URI of documentation describing the error.
          type: string
      required:
        - code
        - reason
      type: object
    Hub_FVO_allOf:
      properties:
        callback:
          description: The callback being registered.
          type: string
        query:
          description: additional data to be passed
          type: string
    Hub_allOf:
      properties:
        id:
          description: Id of the listener
          type: string
        callback:
          description: The callback being registered.
          type: string
        query:
          description: additional data to be passed
          type: string
      required:
        - callback
  securitySchemes: {}
